{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/cv-salon/cv-salon-composer/cv-salon-composer.component.ts","webpack:///src/app/cv-salon/cv-salon-composer/cv-salon-composer.component.html","webpack:///src/app/cv-salon/cv-salon-viewer/cv-salon-viewer.component.ts","webpack:///src/app/cv-salon/cv-salon-viewer/cv-salon-viewer.component.html","webpack:///src/app/cv-salon/cv-salon.ts","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/lib/ctrlSvc.ts","webpack:///src/app/lib/dialog/dialog.component.ts","webpack:///src/app/lib/dialog/dialog.component.html","webpack:///src/app/lib/dialog/dialog.module.ts","webpack:///src/app/lib/dialog/dialog.service.ts","webpack:///src/app/lib/dialog/index.ts","webpack:///src/app/lib/global.ts","webpack:///src/app/lib/headerInjector.ts","webpack:///src/app/lib/programfilter.pipe.ts","webpack:///src/app/lib/restSvc.ts","webpack:///src/app/nav/nav.component.ts","webpack:///src/app/nav/nav.component.html","webpack:///src/app/optimus-minds/optimus-minds-admin.component.ts","webpack:///src/app/optimus-minds/optimus-minds-admin.component.html","webpack:///src/app/optimus-minds/optimus-minds.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","dlgSvc","restSvc","ctrlSvc","title","tableName","pin","email","close","onSave","alert","adminLevelReq","_id","getById","data","aryKeys","Object","value","i","length","svrData","locData","getPhoto","clientName","declareChk","shareChk","EMAIL_REGEXP","test","emailToken","msg","adminLevel","token","dlgAuthMode","err","JSON","stringify","onBtnAction","objData","key","makeProgramList","create","rcvd","docs","upLoadDocs","update","docType","docTable","docId","file","formData","FormData","append","inProgress","upLoadDoc","pipe","event","type","UploadProgress","progress","Math","round","loaded","total","Response","error","message","name","subscribe","errList","logo","domainName","onErrClose","cancelSubmit","okSubmit","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","$event","target","CvSalonComposerComponent","_Activatedroute","aboutMe","mobileNbr","dob","address","edus","cboEdus","edu","eduNote","eduTitle","eduSelected","showEduTitle","skills","cboSkills","cboSkillRates","skillRate","skill","skillNote","skillTitle","skillSelected","showSkillTitle","certs","cboCerts","cert","certNote","certTitle","certSelected","showCertTitle","acheives","cboAcheives","acheive","acheiveNote","acheiveTitle","acheiveSelected","attachAcheive","showAcheiveTitle","exps","cboExps","exp","expNote","expTitle","expSelected","moeExpiry","moeFile","program","aiChk","atRiskChk","careerChk","dramaChk","danceChk","itChk","skillsChk","tongueChk","musicChk","outdoorChk","sportsChk","visualChk","attachCert","newCert","newEdu","newSkill","newExp","newAcheive","showExpTitle","snapshot","url","toString","toLowerCase","init","paramMap","get","openModal","open","idx","mPrograms","push","replace","fidx","findIndex","x","strNote","note","splice","rate","saveCertCvSalon","saveCertOptimusMinds","evt","imagePath","imgURL","doc","files","mimeType","match","makeImgFromBlob","onProfile","onAboutMe","onAttach","onEdu","onExp","onCert","onSkill","onAcheive","onCancelProfile","onSaveProfile","onCancelAboutMe","onSaveAboutMe","onExitEdu","onSaveEdu","onExitExp","onSaveExp","onSelSkillRate","onExitSkill","onSaveSkill","onExitAcheive","onSaveAcheive","onExitCert","onSaveCert","onSelProgram","onCancelMoe","onSaveMoe","CvSalonViewerComponent","resp","isImageLoading","client","paraProgram","item","photo","CvSalon","template","HeaderComponent","onSubmit","onQry","onPdf","CtrlSvc","httpClient","docName","qryTrainer","obj","trainersExist","trainers","document","getElementById","canvas","imgWidth","pageHeight","imgHeight","height","width","heightLeft","contentDataURL","toDataURL","pdf","position","addImage","save","zip","Blob","output","createZip","httpOptions","responseType","apiEp","SERVER_URL","toPromise","res","zipName","pdfBlob","onPdfBlob","counter","getFile","fileData","b","generateAsync","content","providedIn","DialogComponent","dialogService","el","element","nativeElement","console","body","appendChild","addEventListener","className","add","remove","style","display","classList","encapsulation","None","DialogModule","DialogService","dialogs","dialog","filter","find","Global","num","size","s","array","max","apply","map","o","nbr","pad","othersChk","achievementsAny","trainExpAiExpCnt","trainExpAtRiskCnt","trainExpCarrerCnt","trainExpDanceExpCnt","trainExpDramaExpCnt","trainExpItExpCnt","trainExpMusicExpCnt","trainExpTongueExpCnt","trainExpsSkillsExpCnt","trainExpsOutdoorExpCnt","trainExpsVisualExpCnt","trainExpsSportsExpCnt","trainExpsOthersExpCnt","aiExpAny","atRiskExpAny","careerExpAny","dramaExpAny","danceExpAny","itExpAny","skillsExpAny","tongueExpAny","musicExpAny","outdoorExpAny","sportsExpAny","visualExpAny","othersExpAny","from","year","trainCertPickId","trainCertId","dataMode","trainer","trainerName","trainerCode","idNbr","programs","trainCerts","achievements","trainExpAny","trainExpsExpAny","HeaderInjector","request","next","clone","headers","set","handle","ProgramfilterPipe","indexOf","RestSvc","btnAction","watchBtnAction","asObservable","action","folder","promise","reject","blob","image","reader","FileReader","result","readAsDataURL","uri","post","reportProgress","observe","fileName","qryTrainerApi","apiURL","put","NavComponent","onZipPack","OptimusMindsAdminComponent","trainerPickId","trainExpPickIndex","docFile","docFolder","trainerId","j","OptimusMinds","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HeaderComponent } from './header/header.component';\nimport { NavComponent } from './nav/nav.component';\n\nimport { OptimusMinds } from './optimus-minds/optimus-minds';\nimport { OptimusMindsAdminComponent } from './optimus-minds/optimus-minds-admin.component';\n\n/* import { MainComponent } from './main/main.component'; */\nimport { AboutComponent } from './about/about.component';\n/* import { OptimusMindsComponent } from './optimus-mindsOld/optimus-minds.component';\nimport { OptimusMindsAdminComponent } from './optimus-minds-admin/optimus-minds-admin.component';\n */\nimport { CvSalon } from './cv-salon/cv-salon';\n\n\n\n/* import { CvSalonComposerComponent } from './cv-salon/cv-salon-composer/cv-salon-composer.component';\nimport { CvSalonViewerComponent } from './cv-salon/cv-salon-viewer/cv-salon-viewer.component';\nimport { OptimusMindsSiteComponent } from './optimus-minds/optimus-minds-site/optimus-minds-site.component';\nimport { OptimusMindsComposerComponent } from './optimus-minds/optimus-minds-composer/optimus-minds-composer.component';\nimport { OptimusMindsViewerComponent } from './optimus-minds/optimus-minds-viewer/optimus-minds-viewer.component';\n\n */\n\n\nconst routes: Routes = [\n  { path:  '', component:  CvSalon , pathMatch:  'full' },\n  { path:  'optimusminds', component:  CvSalon , pathMatch:  'full' },\n  { path:  'optimusminds/:email', component:  CvSalon , pathMatch:  'full' },\n  { path:  'admin/optimusminds', component:  OptimusMinds  , pathMatch:  'full' }\n  \n /*  { path: 'cvsalon', component: CvSalonSiteComponent },\n  { path: 'cvsalon/:email', component: CvSalonSiteComponent },\n  { path: 'optimusminds', component:  OptimusMindsComponent , pathMatch:  'full' },\n  { path: 'optimusminds/admin', component:  OptimusMindsAdminComponent , pathMatch:  'full' },\n  { path: 'optimusminds/:email', component:  OptimusMindsComponent , pathMatch:  'full' },\n  { path: 'optimusminds/admin/:email', component:  OptimusMindsAdminComponent , pathMatch:  'full' },\n  { path: ':_id', component:  MainComponent, pathMatch:  'full' } ,\n   { path:'about', component: AboutComponent } */  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Global } from './lib/global';\n\n/* import { ModalService } from './lib/_modal';  */\nimport { DialogService } from './lib/dialog';\nimport { RestSvc } from './lib/restSvc';\nimport { FormBuilder, FormGroup, CheckboxRequiredValidator } from '@angular/forms';\nimport { HttpEventType, HttpErrorResponse } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport * as jspdf from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport { stringify } from 'querystring';\n\nimport { CtrlSvc } from './lib/ctrlSvc';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'cvSalon ver 1.0';\n  tableName = \"applicants\";\n  pin = \"\" ;\n\n   \n \n\n\n\n  constructor(private dlgSvc: DialogService, private restSvc: RestSvc, private ctrlSvc: CtrlSvc) { }\n\n  ngOnInit(): void {\n    Global.email = \"\"\n\n  }\n\n\n  get clientName() {\n    return Global.clientName;\n  }\n\n  get docs() {\n\n    return Global.docs;\n  }\n\n  get errList() {\n    return Global.errList;\n  }\n\n  get declareChk() {\n    return Global.locData[\"declareChk\"];\n  }\n\n\n  get shareChk() {\n    return Global.locData[\"shareChk\"];\n  }\n\n  set declareChk(value) {\n    Global.locData[\"declareChk\"] = value;\n  }\n\n\n  set shareChk(value) {\n    Global.locData[\"shareChk\"] = value;\n  }\n\n\n  get dlgAuthMode() {\n    return Global.dlgAuthMode;\n  }\n\n  get email() {\n    return Global.email;\n  }\n\n  set email(value) {\n    Global.email = value;\n  }\n\n  cancelSubmit() {\n    this.dlgSvc.close('dlgSubmit');\n  }\n\n  okSubmit() {\n    this.onSave();\n\n    this.dlgSvc.close('dlgSubmit');\n  }\n\n  onErrClose() {\n    this.dlgSvc.close('dlgErr');\n  }\n\n//  get  pin() {\n//     return Global.pin ;\n//   }\n\n//   set  pin(value) {\n//      Global.pin = value ;\n//   }\n\n  onAuthPin() {\n\n\n    //this.pin = Global.pin ;\n\n     if (this.pin != Global.pin) {\n      alert('Wrong Pin Supplied') ;\n      return ;\n    } \n\n    this.dlgSvc.close('dlgAuth');\n \n\n\n    if (Global.adminLevelReq === 0) {\n\n\n\n      if (Global._id != \"\") {\n\n\n\n        this.restSvc.getById(Global._id).then(\n\n          (data) => {\n\n\n            let aryKeys = Object.keys(data);\n            let value = \"\";\n            for (let i = 0; i < aryKeys.length; i++) {\n              value = data[aryKeys[i]];\n              Global.svrData[aryKeys[i]] = value;\n              Global.locData[aryKeys[i]] = value;\n            }\n\n         \n          })\n\n\n        this.restSvc.getPhoto(Global._id);\n\n\n\n\n      }\n    }\n    else {\n      \n    }\n\n  }\n\n\n  disableSubmit() {\n\n    if (Global.clientName == \"optimusMinds\") {\n      return this.declareChk && this.shareChk ? false : true;\n    }\n    else {\n      return false;\n    }\n\n  }\n\n  disableAuthEmail() {\n    \n    \n    var EMAIL_REGEXP = /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\n\n    if ( this.email == \"\" ) {\n      return true;\n    }\n    else if (this.email.length <= 5 || !EMAIL_REGEXP.test(this.email)) {\n        return  true ;\n    }\n    else {\n      return false ;\n    }\n\n\n \n\n  }\n\n  disableAuthPin() {\n    return this.pin == Global.pin ? false : true;\n  }\n\n  onAuthEmail() {\n\n   \n\n    this.restSvc.emailToken(Global.email).then(\n      (msg) => {\n\n      \n        let adminLevel = msg['adminLevel'];\n\n        if (adminLevel < Global.adminLevelReq) {\n          alert(`User with email: ${this.email} does not have the required Administrator Access Level`)\n          return;\n        }\n\n        //    alert(JSON.stringify(msg)) ;\n        //   Global.email = email ;\n        Global.token = msg['token'];\n        Global.pin = msg['pin'];\n        Global._id = msg['_id'];\n\n        Global.dlgAuthMode = 2;\n\n        // Temporary \n        //this.pin = Global.pin;\n\n\n\n\n\n        //Global.dlgAuthMode = 2 ;\n\n        // this.openModal('dlgAuth');\n\n      },\n      (err) => {\n\n\n\n        alert(JSON.stringify(err));\n\n      })\n\n\n\n\n  }\n\n  onQry() {\n\n    this.restSvc.onBtnAction('qry');\n\n    // Global.makeProgramList() ;\n\n    // alert(JSON.stringify(Global.locData[\"programs\"] )) ;\n    /* \n      this.restSvc.qryTrainer(Global.locData[\"programs\"]).then(\n        (rcvd) =>  {\n    \n         \n    \n            let obj = {} ;\n          \n            obj[\"list\"] = rcvd ;\n            \n            Global.trainers = obj[\"list\"]  ;\n    \n            \n    \n        } ,   \n        (err) =>  {\n         \n        }\n        ) */\n  }\n\n  /* \n  onSave113() {\n  \n   let toSaveApplicant = {} ;\n  \n  \n   let aryKeys = Object.keys(Global.locData);\n   let key = \"\" ;\n  \n    \n  \n   for(let i = 0; i < aryKeys.length;i++) {\n      key = aryKeys[i] ;\n      \n       if (Global.locData[key] != Global.dbData[key] )   {\n          toSaveApplicant[key] = Global.locData[key] ;\n       }\n  }\n  \n  \n  \n  if (Global._id === \"\")\n    {\n  \n      this.restSvc.createApplicant(toSaveApplicant).then(\n        (rcvd) =>  {\n  \n            \n           \n             Global._id = rcvd['_id'] ;\n  \n             \n            for(let i = 0; i < Global.docs.length;i++) {\n                   // this.upLoadDocs(Global._id, Global.docs[i]['docType'], Global.docs[i]['table'], Global.docs[i]['file']) ;\n                   this.upLoadDocs(Global._id, Global.docs[i]['docType'], Global.docs[i]['docTable'], Global.docs[i]['docId'], Global.docs[i]['file']) ;\n       \n               }\n  \n        } ,   \n        (err) =>  {\n         \n        }\n        )\n  \n    }\n    else\n    {\n  \n      this.restSvc.updateApplicant(toSaveApplicant, Global._id ).then(\n        (msg) =>  {\n      \n          \n      \n         for(let i = 0; i < Global.docs.length;i++) {\n          this.upLoadDocs(Global._id, Global.docs[i]['docType'], Global.docs[i]['docTable'], Global.docs[i]['docId'], Global.docs[i]['file']) ;\n          }\n        \n        } ,\n        (err) =>  {\n      \n          alert(JSON.stringify(err)) ;\n      \n        }\n        )\n    }\n  \n    \n   \n  }\n   */\n\n  onSave() {\n\n    let objData = {};\n\n\n    let aryKeys = Object.keys(Global.locData);\n    let key = \"\";\n\n    if (this.tableName == \"trainer\") {\n      Global.makeProgramList();\n    }\n\n    for (let i = 0; i < aryKeys.length; i++) {\n      key = aryKeys[i];\n\n      if (Global.locData[key] != Global.svrData[key]) {\n        objData[key] = Global.locData[key];\n      }\n    }\n\n\n  \n\n    if (Global._id === \"\") {\n\n\n      this.restSvc.create(objData).then(\n        (rcvd) => {\n\n\n\n          Global._id = rcvd['_id'];\n\n\n          for (let i = 0; i < Global.docs.length; i++) {\n            this.upLoadDocs(Global._id, Global.docs[i]['docType'], Global.docs[i]['docTable'], Global.docs[i]['docId'], Global.docs[i]['file']);\n\n          }\n\n        },\n        (err) => {\n\n        }\n      )\n\n    }\n    else {\n\n\n\n      this.restSvc.update(objData, Global._id).then(\n        (msg) => {\n\n\n\n          for (let i = 0; i < Global.docs.length; i++) {\n            this.upLoadDocs(Global._id, Global.docs[i]['docType'], Global.docs[i]['docTable'], Global.docs[i]['docId'], Global.docs[i]['file']);\n          }\n\n        },\n        (err) => {\n\n          alert(JSON.stringify(err));\n\n        }\n      )\n    }\n\n\n\n  }\n\n  \n \n  \n  upLoadDocs(_id: string, docType, docTable, docId, file) {\n\n    const formData = new FormData();\n\n    formData.append('_id', _id);\n    formData.append('docTable', docTable);\n    formData.append('docId', docId);\n    formData.append('file', file);\n\n\n\n\n\n\n    file.inProgress = true;\n\n\n\n\n    this.restSvc.upLoadDoc(formData, docType).pipe(\n      map(event => {\n        switch (event.type) {\n          case HttpEventType.UploadProgress:\n            file.progress = Math.round(event.loaded * 100 / event.total);\n\n\n            break;\n          case HttpEventType.Response:\n            return event;\n        }\n      }),\n      catchError((error: HttpErrorResponse) => {\n        file.inProgress = false;\n\n        alert(error.message);\n        return of(`${file.data.name} upload failed.`);\n\n      })).subscribe((event: any) => {\n        if (typeof (event) === 'object') {\n\n\n\n        }\n      });\n\n  }\n\n  public onPdf() {\n    this.restSvc.onBtnAction('pdf');\n\n    /* \n    var data = document.getElementById('wysiwyg');\n    html2canvas(data).then(canvas => {\n    // Few necessary setting options\n    var imgWidth = 208;\n    var pageHeight = 295;\n    var imgHeight = canvas.height * imgWidth / canvas.width;\n    var heightLeft = imgHeight;\n     \n    const contentDataURL = canvas.toDataURL('image/png')\n    let pdf = new jspdf('p', 'mm', 'a4'); // A4 size page of PDF\n    var position = 0;\n    pdf.addImage(contentDataURL, 'PNG', 0, position, imgWidth, imgHeight)\n    pdf.save('new-file.pdf'); // Generated PDF\n    }); */\n  }\n  /* upLoadPhoto(_id) \n  {\n  \n  \n      \n  \n        const formData = new FormData();  \n        formData.append('file', Global.photoFile);  \n        formData.append('trainerFolder',_id);  \n  \n  \n     \n         Global.photoFile.inProgress = true;  \n  \n  \n  \n        this.restSvc.upLoadPhoto(formData).pipe(  \n          map(event => {  \n            switch (event.type) {  \n              case HttpEventType.UploadProgress:  \n              Global.photoFile.progress = Math.round(event.loaded * 100 / event.total);  \n              \n            \n              break;  \n              case HttpEventType.Response:  \n                return event;  \n            }  \n          }),  \n          catchError((error: HttpErrorResponse) => {  \n            Global.photoFile.inProgress = false;  \n         \n            alert(error.message) ;\n            return of(`${  Global.photoFile.data.name} upload failed.`); \n    \n          })).subscribe((event: any) => {  \n            if (typeof (event) === 'object') { \n           \n  \n  \n            }  \n          });   \n  \n  \n  \n  \n  \n  }\n   */\n\n\n\n\n\n  get logo() {\n    return Global.logo;\n  }\n\n  get domainName() {\n    return Global.domainName;\n  }\n\n\n\n\n}\n\n\n\n","<div class=\"container\">\n    <app-header></app-header>\n    <app-nav></app-nav>\n    <router-outlet></router-outlet>\n  <!--   <app-footer></app-footer> -->\n</div>\n\n\n<dialog id=\"dlgErr\">\n\n    <div fxFlex fxLayout=\"column\">\n\n        <h1>Errors</h1>\n\n        <ol>\n            <div *ngFor=\"let err of errList;\">\n                <li> {{err}} </li>\n            </div>\n        </ol>\n\n\n\n        <div fxLayout=\"row\" fxLayoutAlign=\"end center\" class=\"btn\">\n\n            <button (click)=\"onErrClose();\">Ok</button>\n        </div>\n    </div>\n\n</dialog>\n\n<dialog id=\"dlgAuth\">\n\n    <div *ngIf=\"dlgAuthMode===1\">\n\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n            <h1>LogIn via Email</h1>\n        </div>\n\n        <div fxLayout=\"row\" style=\"text-align: center;\">\n            Please provide an email address to receive an authorisation pin for access.\n        </div>\n\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n            <div fxLayout=\"column\">\n                <label for=\"email\">Email</label>\n                <input style=\"width: 330px;\" id=\"email\" name=\"email\" type=\"email\" [(ngModel)]=\"email\" />\n\n            </div>\n        </div>\n\n\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"btn\">\n         \n            <button [disabled]=\"disableAuthEmail()\" (click)=\"onAuthEmail();\">Ok</button> \n           \n        </div>\n\n    </div>\n\n\n    <div *ngIf=\"dlgAuthMode===2\">\n\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n            <h1>Enter PIN</h1>\n        </div>\n\n        <div fxLayout=\"row\" style=\"text-align: center;\">\n            Please provide the PIN code that was sent to the {{email}}.\n        </div>\n\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n            <div fxLayout=\"column\">\n                <label for=\"pin\">PIN</label>\n                <input style=\"width: 100px;\" id=\"pin\" name=\"pin\" type=\"pin\" [(ngModel)]=\"pin\" />\n\n            </div>\n        </div>\n\n\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"btn\">\n            <button [disabled]=\"disableAuthPin()\" (click)=\"onAuthPin();\">Ok</button>\n        </div>\n\n    </div>\n\n\n\n\n\n</dialog>\n\n<dialog id=\"dlgSubmit\">\n\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n        <h1>Submit Data</h1>\n    </div>\n\n    <div fxLayout=\"row\" style=\"text-align: center;\">\n        Data provided will be saved on the server and available for you.\n    </div>\n\n    <div *ngIf=\"clientName=='optimusMinds'\">\n\n   \n    <div class=\"chkBoxes\">\n\n        <input class=\"leftA\" id=\"declare\" name=\"declare\" type=\"checkbox\" [(ngModel)]=\"declareChk\" />\n        <label class=\"rightA\" for=\"declare\"> I declare that the infomation provided by me to be true.</label>\n\n        <input class=\"leftA\" id=\"share\" name=\"share\" type=\"checkbox\" [(ngModel)]=\"shareChk\" />\n        <label class=\"rightA\" for=\"declare\">I allow for my information to be shared with prospective\n            client\\s</label>\n\n        <br>\n\n       \n    </div>\n\n    <div  *ngIf=\"docs.length > 0\" fxLayout=\"row\" style=\"text-align: center;\">\n        Documents to be uploaded :\n    </div>\n\n     \n    <!-- <div *ngIf=\"docs.length > 0\"> Documents to be uploaded : </div> -->\n    <ol>\n        <div *ngFor=\"let doc of docs;\">\n            <li> {{doc.docTable}} : {{doc.docName}} </li>\n        </div>\n    </ol>\n    \n</div>\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"btn\">\n        <button (click)=\"cancelSubmit();\">Cancel</button>\n        <button [disabled]=\"disableSubmit()\" (click)=\"okSubmit();\">Ok</button>\n    </div>\n\n</dialog>\n\n<dialog id=\"dlgSubmitOld\">\n\n\n    <div fxLayout=\"row\">\n\n\n        <div fxFlex fxLayout=\"column\">\n\n            <h1>Submit</h1>\n\n\n\n            <div class=\"chkBoxes\">\n\n                <input class=\"leftA\" id=\"declare\" name=\"declare\" type=\"checkbox\" [(ngModel)]=\"declareChk\" />\n                <label class=\"rightA\" for=\"declare\"> I declare that the infomation provided by me to be true.</label>\n\n                <input class=\"leftA\" id=\"share\" name=\"share\" type=\"checkbox\" [(ngModel)]=\"shareChk\" />\n                <label class=\"rightA\" for=\"declare\">I allow for my information to be shared with prospective\n                    client\\s</label>\n\n                <br>\n            </div>\n\n            <div *ngIf=\"docs.length > 0\"> Documents to be uploaded : </div>\n            <ol>\n                <div *ngFor=\"let doc of docs;\">\n                    <li> {{doc.docTable}} : {{doc.docName}} </li>\n                </div>\n            </ol>\n        </div>\n    </div>\n    <div fxLayout=\"row\" fxLayoutAlign=\"end center\" class=\"btn\">\n        <button (click)=\"cancelSubmit();\">Cancel</button>\n        <button [disabled]=\"disableSubmit()\" (click)=\"okSubmit();\">Ok</button>\n    </div>\n\n\n\n\n\n\n</dialog>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { environment } from '../environments/environment';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\n/* import { ModalModule} from '../app/lib/_modal' */\nimport { DialogModule} from '../app/lib/dialog'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { QuillModule } from 'ngx-quill'\nimport { HeaderInjector } from './lib/headerInjector';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\n\n\nimport { HeaderComponent } from './header/header.component';\nimport { NavComponent } from './nav/nav.component';\n\nimport { AboutComponent } from './about/about.component';\nimport { CvSalon } from './cv-salon/cv-salon';\nimport { CvSalonComposerComponent } from './cv-salon/cv-salon-composer/cv-salon-composer.component';\nimport { CvSalonViewerComponent } from './cv-salon/cv-salon-viewer/cv-salon-viewer.component';\nimport { OptimusMindsAdminComponent } from './optimus-minds/optimus-minds-admin.component'; \nimport { OptimusMinds } from './optimus-minds/optimus-minds';\nimport { ProgramfilterPipe } from './lib/programfilter.pipe';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    NavComponent,\n    CvSalon,\n    CvSalonComposerComponent,\n    CvSalonViewerComponent,\n    OptimusMindsAdminComponent ,\n    OptimusMinds,\n    ProgramfilterPipe\n   \n   \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FlexLayoutModule,\n    FormsModule, \n    ReactiveFormsModule,\n   /*  ModalModule, */\n    DialogModule,\n    HttpClientModule,\n    QuillModule.forRoot()\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass:  HeaderInjector, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Global } from '../../lib/global';\nimport { RestSvc } from '../../lib/restSvc';\nimport { DialogService } from '../../lib/dialog';\nimport { ActivatedRoute } from '@angular/router';\n/* import { Router } from '@angular/router';\nimport { threadId } from 'worker_threads'; */\n\n@Component({\n  selector: 'app-cv-salon-composer',\n  templateUrl: './cv-salon-composer.component.html',\n  styleUrls: ['./cv-salon-composer.component.scss']\n})\nexport class CvSalonComposerComponent implements OnInit {\n\n\n\n\n  name = \"\";\n  aboutMe = \"\";\n  mobileNbr = \"\";\n  dob = \"\";\n  address = \"\";\n\n\n  // Education\n  edus = [];\n  cboEdus = []\n  edu = \"\";\n  eduNote = \"\";\n  eduTitle = \"\";\n  eduSelected = \"Add Education\";\n  showEduTitle = true;\n\n\n  // Skills\n  skills = [];\n  cboSkills = []\n  cboSkillRates = [\"1 Star\", \"2 Stars\", \"3 Stars\", \"4 Stars\", \"5 Stars\"];\n  skillRate = \"\";\n  skill = \"\";\n  skillNote = \"\";\n  skillTitle = \"\";\n  skillSelected = \"Add Skill\";\n  showSkillTitle = true;\n\n\n  // Certs\n  certs = [];\n  cboCerts = []\n  cert = \"\";\n  certNote = \"\";\n  certTitle = \"\";\n  certSelected = \"Add Skill\";\n  showCertTitle = true;\n\n\n\n  // Acheivment\n  acheives = [];\n  cboAcheives = []\n  acheive = \"\";\n  acheiveNote = \"\";\n  acheiveTitle = \"\";\n  acheiveSelected = \"Add Acheivement\";\n  attachAcheive = \"\" ;\n  showAcheiveTitle = true;\n\n\n  // Expereinces\n  exps = [];\n  cboExps = [];\n  exp = \"\";\n  expNote = \"\";\n  expTitle = \"\";\n  expSelected = \"Add Education\";\n\n  // for Optimus Minds\n  moeExpiry = \"\";\n  moeFile = \"\" ;\n  program = \"\" ;\n  aiChk = false;\n  atRiskChk = false;\n  careerChk = false;\n  dramaChk = false;\n  danceChk = false;\n  itChk = false;\n  skillsChk = false;\n  tongueChk = false;\n  musicChk = false;\n  outdoorChk = false;\n  sportsChk = false;\n  visualChk = false;\n\n // certFile = \"\" ;\n  attachCert = \"\" ;\n\n  newCert = false ;\n  newEdu = false ;\n  newSkill = false ;\n  newExp = false ;\n  newAcheive = false ;\n\n\n\n\n\n\n\n  // End of Getters & Setters\n\n\n\n\n\n\n  showExpTitle = true;\n\n\n  constructor(private dlgSvc: DialogService, private restSvc: RestSvc, private _Activatedroute: ActivatedRoute) { }\n\n\n\n\n  ngOnInit(): void {\n\n\n\n\n    switch (this._Activatedroute.snapshot.url.toString().toLowerCase()) {\n      case \"optimusminds\":\n       Global.init('optimusMinds');\n        break;\n      default:\n        Global.init('cvSalon');\n        break;\n    }\n\n\n    let email = this._Activatedroute.snapshot.paramMap.get(\"email\");\n\n\n    if (email === null) {\n\n      Global.dlgAuthMode = 1;\n\n    \n      this.openModal('dlgAuth');\n\n    }\n    else {\n\n      this.restSvc.emailToken(email).then(\n        (msg) => {\n\n          let adminLevel = msg['adminLevel'];\n\n\n\n          Global.email = email;\n          Global.token = msg['token'];\n          Global.pin = msg['pin'];\n          Global._id = msg['_id'];\n          Global.adminLevel = adminLevel;\n          Global.dlgAuthMode = 2;\n\n          this.openModal('dlgAuth');\n\n        },\n        (err) => {\n\n          alert('Error: ' + JSON.stringify(err));\n\n        })\n\n    }\n\n\n\n  }\n\n\n  get clientName() {\n    return Global.clientName;\n  }\n\n  get programs() {\n    return Global.locData[\"programs\"];\n  }\n\n  openModal(id: string) {\n  \n    this.dlgSvc.open(id);\n  }\n\n\n  // Moe\n  onMoe() {\n\n    this.moeExpiry = Global.locData['moeExpiry'];\n    this.moeFile = Global.locData['moeFile'];\n\n    this.aiChk = false;\n\n    this.atRiskChk = false;\n\n    this.careerChk = false;\n\n    this.danceChk = false;\n\n    this.dramaChk = false;\n\n\n    this.musicChk = false;\n\n    this.tongueChk = false;\n\n    this.skillsChk = false;\n\n    this.outdoorChk = false;\n\n    this.outdoorChk = false;\n\n    this.visualChk = false;\n\n    this.sportsChk = false;\n\n\n\n    for (let idx = 0; idx < Global.locData[\"programs\"].length; idx++) {\n\n      switch (Global.locData[\"programs\"][idx]) {\n        case \"AI\":\n          this.aiChk = true;\n          break;\n        case \"At Risk\":\n          this.atRiskChk = true;\n          break;\n        case \"Career Perparation\":\n          this.careerChk = true;\n          break;\n        case \"Dance\":\n          this.danceChk = true;\n          break;\n        case \"Drama\":\n          this.dramaChk = true;\n          break;\n        case \"IT\\\\Multimedia\":\n          this.itChk = true;\n          break;\n        case \"Music\":\n          this.musicChk = true;\n          break;\n        case \"Mother Tongue\":\n          this.tongueChk = true;\n          break;\n        case \"Life Skills\\Soft Skills\":\n          this.skillsChk = true;\n          break;\n        case \"Outdoor Education\":\n          this.outdoorChk = true;\n          break;\n        case \"Outdoor Education\":\n          this.outdoorChk = true;\n          break;\n        case \"Visual Arts\":\n          this.visualChk = true;\n          break;\n        case \"Sports\":\n          this.sportsChk = true;\n          break;\n\n\n\n      }\n    }\n\n\n    this.dlgSvc.open('dlgMoe');\n  }\n  /* \n  onAddMoeFile(evt) {\n  \n    alert('moe') ;\n    let doc = {}\n   \n    doc['docType'] = 'MOE License' ;\n    doc['docId'] = '0000' ;\n    doc['docTable'] = 'moe' ;\n  \n    doc['file'] = evt.target.files[0] ;\n    \n    Global.docs.push(doc) ;\n  \n  \n  }\n   */\n  onSaveMoe() {\n\n\n\n    if (this.moeExpiry == \"\") {\n      alert(\"Uanble to save, need MOE Expiry Date\");\n      return;\n    }\n\n    if (this.moeFile == \"\") {\n      alert(\"Uanble to save, need MOE License file\");\n      return;\n    }\n\n    let mPrograms = [];\n\n    if (this.aiChk) mPrograms.push('AI');\n    if (this.atRiskChk) mPrograms.push('At Risk');\n    if (this.careerChk) mPrograms.push('Career Perparation');\n    if (this.danceChk) mPrograms.push('Dance');\n    if (this.dramaChk) mPrograms.push('Drama');\n    if (this.itChk) mPrograms.push('IT\\\\Multimedia');\n    if (this.musicChk) mPrograms.push('Music');\n    if (this.tongueChk) mPrograms.push('Mother Tongue');\n    if (this.skillsChk) mPrograms.push('Life Skills\\Soft Skills');\n    if (this.outdoorChk) mPrograms.push('Outdoor Education');\n    if (this.visualChk) mPrograms.push('Visual Arts');\n    if (this.sportsChk) mPrograms.push('Sports');\n\n\n    if (mPrograms.length == 0) {\n      alert(\"Uanble to save, please select at least 1 training program\");\n      return;\n    }\n\n\n    Global.locData['moeExpiry'] = this.moeExpiry;\n    Global.locData['moeFile'] = this.moeFile;\n    Global.locData[\"programs\"] = mPrograms;\n    this.dlgSvc.close('dlgMoe');\n  }\n\n\n  onCancelMoe() {\n    this.dlgSvc.close('dlgMoe');\n  }\n\n\n  // Profile\n  onProfile() {\n    this.name = Global.locData['name'];\n    // Global.email =  Global.locData[\"email\"] ;\n    this.dob = Global.locData[\"dob\"];\n    this.mobileNbr = Global.locData[\"mobileNbr\"];\n    this.address = Global.locData[\"address\"];\n\n    this.dlgSvc.open('dlgProfile');\n  }\n\n  onCancelProfile() {\n    this.dlgSvc.close('dlgProfile');\n  }\n\n  onSaveProfile() {\n\n    Global.locData[\"name\"] = this.name;\n    Global.locData[\"email\"] = this.email;\n    Global.locData[\"dob\"] = this.dob;\n    Global.locData[\"mobileNbr\"] = this.mobileNbr;\n    Global.locData[\"address\"] = this.address.replace(/<p[^>]*>/g, '').replace(/<\\/p>/g, '<br />');\n\n    this.dlgSvc.close('dlgProfile');\n\n  }\n\n\n  // About Me\n  onAboutMe() {\n    this.aboutMe = Global.locData['aboutMe'];\n    this.dlgSvc.open('dlgAboutMe');\n  }\n\n  onCancelAboutMe() {\n    this.dlgSvc.close('dlgAboutMe');\n  }\n\n  onSaveAboutMe() {\n\n    Global.locData[\"aboutMe\"] = this.aboutMe.replace(/<p[^>]*>/g, '').replace(/<\\/p>/g, '<br />');\n\n    this.dlgSvc.close('dlgAboutMe');\n\n  }\n\n \n  onSelProgram(program) {\n    this.program = program ;\n  }\n\n\n// ------------------------------------------------------------------\n\n\nonAcheive() {\n  //acheive\n\n\n  this.acheives = Global.locData[\"acheives\"];\n  this.cboAcheives = [];\n\n\n\n  for (let idx = 0; idx < this.acheives.length; idx++) {\n    this.cboAcheives.push(this.acheives[idx]['title']);\n  }\n\n \n  \n  if (this.cboAcheives.length == 0) {\n    this.newAcheive = true;\n    this.acheive = \"\" ;\n    this.acheiveSelected = \"\";\n    this.acheiveTitle = \"\";\n    this.acheiveNote = \"\";\n  }\n  else {\n    this.newAcheive = false;\n    this.acheive = this.cboAcheives[0];\n    this.acheiveSelected = this.acheive; \n    this.acheiveNote = this.acheives[0]['note'];\n   \n  } \n\n  if (Global.clientName == 'optimusMinds') {\n\n    if ( this.newAcheive ) {\n             this.attachAcheive= \"\";\n    }\n    else {\n             this.attachAcheive = this.acheives[0]['file'];\n    }\n\n\n   \n\n  }\n\n  this.dlgSvc.open('dlgAcheive');\n\n \n\n}\n\nonNewAcheive(clientName) {\n\n  this.acheiveTitle = \"\" ;\n  this.acheiveNote = \"\" ;\n  this.newAcheive = true ;\n\n  if (Global.clientName == 'optimusMinds') {\n             this.attachAcheive= \"\";\n    }\n\n  \n\n}\n\n\nonSelAcheive(clientName, acheive) {\n\n  this.acheiveSelected = acheive;\n  let fidx = this.acheives.findIndex(x => x.title === acheive);\n\n  this.acheiveTitle = this.acheives[fidx]['title'];\n  this.acheiveNote = this.acheives[fidx]['note'];\n \n  if (Global.clientName == 'optimusMinds') {\n    this.attachAcheive = this.acheives[fidx]['file'];\n  \n  }\n\n}\n\nonExitAcheive(clientName) {\n  this.dlgSvc.close('dlgAcheive');\n  this.newAcheive = false ;\n\n\n}\n\nonSaveAcheive(clientName) {\n\n\n  \n  let strNote = this.acheiveNote.replace(/<p[^>]*>/g, '').replace(/<\\/p>/g, '<br />');\n\n \n\n  if (this.newAcheive) {\n\n    if (Global.clientName == 'optimusMinds') {\n      this.acheives.push({ title: this.acheiveTitle, note: strNote, file:  this.attachAcheive });\n    }\n    else {\n      this.acheives.push({ title: this.acheiveTitle, note: strNote });\n    }\n \n  }\n  else {\n\n    let fidx = this.acheives.findIndex(x => x.title === this.acheiveSelected);\n\n    this.acheives[fidx]['note'] = strNote;\n\n    if (Global.clientName == 'optimusMinds') {\n      this.acheives[fidx]['file'] = this.attachAcheive ;\n    }\n  }\n\n\n \n  Global.locData[\"acheives\"] = this.acheives;\n  Global.svrData[\"acheives\"] = [];\n\n  this.dlgSvc.close('dlgAcheive');\n\n\n}\n\nonDelAcheive(clientName) {\n\nlet fidx = this.acheives.findIndex(x => x.title === this.acheiveSelected);\nthis.acheives.splice(fidx, 1);\n\n  \nGlobal.locData[\"acheives\"] = this.acheives;\nGlobal.svrData[\"acheives\"] = [];\n\nthis.newAcheive = false ;\n\nthis.dlgSvc.close('dlgAcheive');\n\n}\n\n// ------------------- ACHIEVE ------------------------------------- \n// ------------------- SKILL START ----------------------------------\n\nonSkill() {\n\n\n  this.skills = Global.locData[\"skills\"];\n  this.cboSkills = [];\n\n\n\n  for (let idx = 0; idx < this.skills.length; idx++) {\n    this.cboSkills.push(this.skills[idx]['title']);\n  }\n\n \n  \n  if (this.cboSkills.length == 0) {\n    this.newSkill = true;\n    this.skill = \"\" ;\n    this.skillSelected = \"\";\n    this.skillRate = \"1 Star\" ;\n  \n  }\n  else {\n    this.newSkill = false;\n    this.skill = this.cboSkills[0];\n    this.skillSelected = this.skill; \n    \n    this.skillRate = this.skills[0]['rate'];\n   \n  } \n\n  this.dlgSvc.open('dlgSkill');\n\n}\n\nonNewSkill(clientName) {\n\n  this.skillTitle = \"\" ;\n  this.skillRate = \"1 Star\" ;\n  this.newSkill = true ;\n\n}\n\n\nonSelSkill(clientName, skill) {\n\n  this.skillSelected = skill;\n  let fidx = this.skills.findIndex(x => x.title === skill);\n\n  this.skillTitle = this.skills[fidx]['title'];\n  this.skillRate = this.skills[fidx]['rate'];\n \n  \n  \n  }\n\n\nonExitSkill(clientName) {\n  this.dlgSvc.close('dlgSkill');\n  this.newSkill = false ;\n\n\n}\n\nonSaveSkill(clientName) {\n\n\n  \n  \n   \n\n  if (this.newSkill) {\n\n    this.skills.push({ title: this.skillTitle, rate:   this.skillRate });\n  }\n  else {\n\n    let fidx = this.skills.findIndex(x => x.title === this.skillSelected);\n\n    this.skills[fidx]['rate'] =   this.skillRate ;\n\n  }\n\n \n  Global.locData[\"skills\"] = this.skills;\n  Global.svrData[\"skills\"] = [];\n\n  this.dlgSvc.close('dlgSkill');\n\n\n}\n\nonDelSkill(clientName) {\n\nlet fidx = this.skills.findIndex(x => x.title === this.skillSelected);\nthis.skills.splice(fidx, 1);\n\n  \nGlobal.locData[\"skills\"] = this.skills;\nGlobal.svrData[\"skills\"] = [];\n\nthis.newSkill = false ;\n\nthis.dlgSvc.close('dlgSkill');\n\n}\n\n\n// ------------------- SKILL END \n\n// ------------------- EXP START ----------------------------------\n\nonExp() {\n\n\n  this.exps = Global.locData[\"exps\"];\n  this.cboExps = [];\n\n\n\n  for (let idx = 0; idx < this.exps.length; idx++) {\n    this.cboExps.push(this.exps[idx]['title']);\n  }\n\n \n  \n  if (this.cboExps.length == 0) {\n    this.newExp = true;\n    this.exp = \"\" ;\n    this.expSelected = \"\";\n    this.expNote = \"\" ; \n    this.expTitle = \"\";\n  \n  }\n  else {\n    this.newExp = false;\n    this.exp = this.cboExps[0];\n    this.expSelected = this.exp; \n    this.expNote = this.exps[0]['note'];\n   \n  } \n\n  this.dlgSvc.open('dlgExp');\n\n}\n\nonNewExp(clientName) {\n\n  this.expTitle = \"\" ;\n  this.expNote = \"\" ;\n  this.newExp = true ;\n\n}\n\n\nonSelExp(clientName, exp) {\n\n  this.expSelected = exp;\n  let fidx = this.exps.findIndex(x => x.title === exp);\n\n  this.expTitle = this.exps[fidx]['title'];\n  this.expNote = this.exps[fidx]['note'];\n \n  \n  \n  }\n\n\nonExitExp(clientName) {\n  this.dlgSvc.close('dlgExp');\n  this.newExp = false ;\n\n\n}\n\nonSaveExp(clientName) {\n\n\n  \n  let strNote = this.expNote.replace(/<p[^>]*>/g, '').replace(/<\\/p>/g, '<br />');\n\n   \n\n  if (this.newExp) {\n\n    this.exps.push({ title: this.expTitle, note: strNote });\n  }\n  else {\n\n    let fidx = this.exps.findIndex(x => x.title === this.expSelected);\n\n    this.exps[fidx]['note'] = strNote;\n\n  }\n\n \n  Global.locData[\"exps\"] = this.exps;\n  Global.svrData[\"exps\"] = [];\n\n  this.dlgSvc.close('dlgExp');\n\n\n}\n\nonDelExp(clientName) {\n\nlet fidx = this.exps.findIndex(x => x.title === this.expSelected);\nthis.exps.splice(fidx, 1);\n\n  \nGlobal.locData[\"exps\"] = this.exps;\nGlobal.svrData[\"exps\"] = [];\n\nthis.newExp = false ;\n\nthis.dlgSvc.close('dlgExp');\n\n}\n\n\n// ------------------- EXP END ------------------------------------\n// ------------------- EDU START ----------------------------------\n\nonEdu() {\n\n\n  this.edus = Global.locData[\"edus\"];\n  this.cboEdus = [];\n\n\n\n  for (let idx = 0; idx < this.edus.length; idx++) {\n    this.cboEdus.push(this.edus[idx]['title']);\n  }\n\n \n  \n  if (this.cboEdus.length == 0) {\n    this.newEdu = true;\n    this.edu = \"\" ;\n    this.eduSelected = \"\";\n    this.eduNote = \"\" ; \n    this.eduTitle = \"\" ;\n  \n  }\n  else {\n    this.newEdu = false;\n    this.edu = this.cboEdus[0];\n    this.eduSelected = this.edu; \n    this.eduNote = this.edus[0]['note'];\n   \n  } \n\n  this.dlgSvc.open('dlgEdu');\n\n}\n\nonNewEdu(clientName) {\n\n  this.eduTitle = \"\" ;\n  this.eduNote = \"\" ;\n  this.newEdu = true ;\n\n}\n\n\nonSelEdu(clientName, edu) {\n\n  this.eduSelected = edu;\n  let fidx = this.edus.findIndex(x => x.title === edu);\n\n  this.eduTitle = this.edus[fidx]['title'];\n  this.eduNote = this.edus[fidx]['note'];\n \n  \n  \n  }\n\n\nonExitEdu(clientName) {\n  this.dlgSvc.close('dlgEdu');\n  this.newEdu = false ;\n\n\n}\n\nonSaveEdu(clientName) {\n\n\n  \n  let strNote = this.eduNote.replace(/<p[^>]*>/g, '').replace(/<\\/p>/g, '<br />');\n\n   \n\n  if (this.newEdu) {\n\n    this.edus.push({ title: this.eduTitle, note: strNote });\n  }\n  else {\n\n    let fidx = this.edus.findIndex(x => x.title === this.eduSelected);\n\n    this.edus[fidx]['note'] = strNote;\n\n  }\n\n \n  Global.locData[\"edus\"] = this.edus;\n  Global.svrData[\"edus\"] = [];\n\n  this.dlgSvc.close('dlgEdu');\n\n\n}\n\nonDelEdu(clientName) {\n\nlet fidx = this.edus.findIndex(x => x.title === this.eduSelected);\nthis.edus.splice(fidx, 1);\n\n  \nGlobal.locData[\"edus\"] = this.edus;\nGlobal.svrData[\"edus\"] = [];\n\nthis.newEdu = false ;\n\nthis.dlgSvc.close('dlgEdu');\n\n}\n\n// -------------------- EDU END ------------------------------------\n// -------------------- CERT START --------------------------------\n\nonCert() {\n\n\n  this.certs = Global.locData[\"certs\"];\n  this.cboCerts = [];\n\n\n\n  for (let idx = 0; idx < this.certs.length; idx++) {\n    this.cboCerts.push(this.certs[idx]['title']);\n  }\n\n  \n  if (this.cboCerts.length == 0) {\n    this.newCert = true;\n    this.cert = \"\" ;\n    this.certSelected = \"\";\n    this.program = \"\" ;\n    this.certTitle = \"\"; \n  \n  }\n  else {\n    this.newCert = false;\n    this.cert = this.cboCerts[0];\n    this.certSelected = this.cert; \n    this.program = this.certs[0]['program'];\n  } \n  \n\n  if (Global.clientName == 'optimusMinds') {\n\n\n    if (this.newCert ) {\n             this.attachCert = \"\";\n    }\n    else {\n      this.attachCert = this.certs[0]['file'];\n     \n    }\n\n    this.dlgSvc.open('dlgCertOptimusMinds');\n  }\n  else {\n  \n  \n    if (this.newCert ) {\n      this.certNote = \"\";\n      \n    }\n    else {\n     // this.newCert = false;\n      this.certNote = this.certs[0]['note'];\n     \n    }\n\n    this.dlgSvc.open('dlgCert');\n\n  }\n\n\n\n}\n\n\n\n  onNewCert(clientName) {\n\n    this.certTitle = \"\" ;\n    this.attachCert = \"\";\n    this.certNote = \"\" ;\n    this.program = this.certs[0]['program'] ;\n    this.newCert = true ;\n  \n  }\n \n\n  onSelCert(clientName, cert) {\n\n    this.certSelected = cert;\n    let fidx = this.certs.findIndex(x => x.title === cert);\n \n    this.certTitle = this.certs[fidx]['title'];\n\n    switch(clientName) {\n\n      case \"cvSalon\":\n        this.certNote = this.certs[fidx]['note'];\n        break ;\n      case \"optimusMinds\":\n        this.attachCert =  this.certs[fidx]['file'];\n        break ;\n          \n  \n    }\n \n    \n    }\n  \n/* \n onSelCertOptimusMinds(cert) {\n\n       this.certSelected = cert;\n\n      let fidx = this.certs.findIndex(x => x.title === cert);\n      this.certTitle = this.certs[fidx]['title'];\n      this.attachCert =  this.certs[fidx]['file'];\n      this.program = this.certs[fidx]['program'];\n      this.showCertTitle = false;\n\n    } */\n\n\nonExitCert(clientName) {\n\n  this.newCert = false ;\n\n  switch(clientName) {\n\n    case \"cvSalon\":\n      this.dlgSvc.close('dlgCert');\n      break ;\n    case \"optimusMinds\":\n      this.dlgSvc.close('dlgCertOptimusMinds');\n      break ;\n        \n\n  }\n\n\n}\n\nonSaveCert(clientName) {\n\n  switch(clientName) {\n\n    case \"cvSalon\":\n     this.saveCertCvSalon() ;\n      break ;\n    case \"optimusMinds\":\n      this.saveCertOptimusMinds() ;\n      break ;\n        \n\n  }\n\n}\n\nonDelCert(clientName) {\n\n  let fidx = this.certs.findIndex(x => x.title === this.certSelected);\n  this.certs.splice(fidx, 1);\n\n    \n  Global.locData[\"certs\"] = this.certs;\n  Global.svrData[\"certs\"] = [];\n\n  this.newCert = false ;\n\n  switch(clientName) {\n\n    case \"cvSalon\":\n      this.dlgSvc.close('dlgCert');\n      break ;\n    case \"optimusMinds\":\n      this.dlgSvc.close('dlgCertOptimusMinds');\n      break ;\n        \n\n  }\n\n}\n\n\nsaveCertCvSalon() {\n\n\n\n    let strNote = this.certNote.replace(/<p[^>]*>/g, '').replace(/<\\/p>/g, '<br />');\n\n      \n\n    if (this.newCert) {\n\n      this.certs.push({ title: this.certTitle, note: strNote });\n    }\n    else {\n\n      let fidx = this.certs.findIndex(x => x.title === this.certSelected);\n\n      this.certs[fidx]['note'] = strNote;\n\n    }\n\n   \n    Global.locData[\"certs\"] = this.certs;\n    Global.svrData[\"certs\"] = [];\n\n    this.dlgSvc.close('dlgCert');\n\n\n}\n\nsaveCertOptimusMinds() {\n\n   // let strNote = this.certNote.replace(/<p[^>]*>/g, '').replace(/<\\/p>/g, '<br />');\n\n    if (this.newCert) {\n\n      this.certs.push({ title: this.certTitle, program: this.program, file: this.attachCert });\n    }\n    else {\n\n      let fidx = this.certs.findIndex(x => x.title === this.certSelected);\n      this.certs[fidx]['program'] = this.program ;\n      this.certs[fidx]['file'] = this.attachCert ;\n    }\n\n\n\n\n    Global.locData[\"certs\"] = this.certs;\n    Global.svrData[\"certs\"] = [];\n\n    this.newCert = false ;\n\n    this.dlgSvc.close('dlgCertOptimusMinds');\n\n\n}\n  \n \n\n//---------------------   CERT END ------------------------------------------------\n\nonSelSkillRate(rate) {\n\n    this.skillRate = rate ;\n}\n\n\n  /* onAcheive() {\n\n    this.acheives = Global.locData[\"acheives\"];\n    this.cboAcheives = [];\n\n    for (let idx = 0; idx < this.acheives.length; idx++) {\n      this.cboAcheives.push(this.acheives[idx]['title']);\n    }\n\n    this.cboAcheives.push('Add Acheivement');\n    this.acheive = this.cboAcheives[0];\n    this.acheiveSelected = this.acheive;\n\n    if (this.acheive == 'Add Acheivement') {\n      this.showAcheiveTitle = true;\n\n    }\n    else {\n      this.showAcheiveTitle = false;\n      this.acheiveNote = this.acheives[0]['note'];\n    }\n\n\n    this.dlgSvc.open('dlgAcheive');\n\n\n  }\n\n  onSelAcheive(acheive) {\n\n    this.acheiveSelected = acheive;\n\n    if (acheive == 'Add Acheivement') {\n      this.acheiveNote = '';\n      this.acheiveTitle = '';\n      this.showAcheiveTitle = true;\n    }\n    else {\n\n      let fidx = this.acheives.findIndex(x => x.title === acheive);\n      this.acheiveNote = this.acheives[fidx]['note'];\n      this.acheiveTitle = this.acheive[fidx]['title'];\n      this.showAcheiveTitle = false;\n\n    }\n\n\n  }\n\n  onCancelAcheive() {\n    this.dlgSvc.close('dlgAcheive');\n  }\n\n  onSaveAcheive() {\n\n    let strNote = this.acheiveNote.replace(/<p[^>]*>/g, '').replace(/<\\/p>/g, '<br />');\n\n    if (this.acheiveSelected == 'Add Acheivement') {\n\n      this.acheives.push({ title: this.acheiveTitle, note: strNote });\n    }\n    else {\n      let fidx = this.acheives.findIndex(x => x.title === this.acheiveSelected);\n\n      this.acheives[fidx]['note'] = strNote;\n\n    }\n\n\n\n\n    Global.locData[\"acheives\"] = this.acheives;\n    Global.svrData[\"acheives\"] = [];\n\n\n    this.dlgSvc.close('dlgAcheive');\n\n\n  }\n\n  onDelAcheive() {\n\n    let fidx = this.acheives.findIndex(x => x.title === this.acheiveSelected);\n    this.acheives.splice(fidx, 1);\n\n    this.dlgSvc.close('dlgAcheive');\n    Global.locData[\"acheives\"] = this.acheives;\n    Global.svrData[\"acheives\"] = [];\n\n  }\n */\n\n/* \n  onSkill() {\n\n\n    this.skills = Global.locData[\"skills\"];\n    this.cboSkills = [];\n\n\n\n    for (let idx = 0; idx < this.skills.length; idx++) {\n      this.cboSkills.push(this.skills[idx]['title']);\n    }\n\n\n\n    this.cboSkills.push('Add Skill');\n    this.skill = this.cboSkills[0];\n\n    this.skillSelected = this.skill;\n\n\n    if (this.skill == 'Add Skill') {\n      this.showSkillTitle = true;\n      this.skillRate = \"1 Star\";\n    }\n    else {\n      this.showSkillTitle = false;\n      this.skillRate = this.skills[0]['rate'];\n    }\n\n\n\n\n    this.dlgSvc.open('dlgSkill');\n\n\n  }\n\n  onSelSkill(skill) {\n\n    this.skillSelected = skill;\n\n    if (skill == 'Add Skill') {\n      this.skillNote = '';\n      this.skillTitle = '';\n      this.showSkillTitle = true;\n    }\n    else {\n\n      let fidx = this.skills.findIndex(x => x.title === skill);\n      this.skillNote = this.skills[fidx]['note'];\n      this.skillTitle = this.skills[fidx]['title'];\n      this.showSkillTitle = false;\n\n    }\n\n\n  }\n\n\n  onSelSkillRate(rate) {\n\n\n  }\n\n  onCancelSkill() {\n    this.dlgSvc.close('dlgSkill');\n  }\n\n  onSaveSkill() {\n\n\n    if (this.skillSelected == 'Add Skill') {\n\n\n\n      this.skills.push({ title: this.skillTitle, rate: this.skillRate });\n    }\n    else {\n\n\n      let fidx = this.skills.findIndex(x => x.title === this.skillSelected);\n\n      this.skills[fidx]['rate'] = this.skillRate;\n\n    }\n\n\n\n\n    Global.locData[\"skills\"] = this.skills;\n    Global.svrData[\"skills\"] = [];\n\n\n    this.dlgSvc.close('dlgSkill');\n\n\n  }\n\n  onDelSkill() {\n\n    let fidx = this.skills.findIndex(x => x.title === this.skillSelected);\n    this.skills.splice(fidx, 1);\n\n    this.dlgSvc.close('dlgSkill');\n    Global.locData[\"skills\"] = this.skills;\n    Global.svrData[\"skills\"] = [];\n\n  }\n\n\n */\n\n  // Education \n \n/* \n  onSelEdu(edu) {\n\n    this.eduSelected = edu;\n\n    if (edu == 'Add Education') {\n\n      this.eduNote = '';\n      this.eduTitle = '';\n      this.showEduTitle = true;\n    }\n    else {\n\n\n      let fidx = this.edus.findIndex(x => x.title === edu);\n      this.eduNote = this.edus[fidx]['note'];\n      this.eduTitle = this.edus[fidx]['title'];\n      this.showEduTitle = false;\n\n    }\n\n\n  }\n\n\n  onCancelEdu() {\n    this.dlgSvc.close('dlgEdu');\n  }\n\n  onSaveEdu() {\n\n    let strNote = this.eduNote.replace(/<p[^>]*>/g, '').replace(/<\\/p>/g, '<br />');\n\n    if (this.eduSelected == 'Add Education') {\n\n      this.edus.push({ title: this.eduTitle, note: strNote });\n    }\n    else {\n      let fidx = this.edus.findIndex(x => x.title === this.eduSelected);\n\n      this.edus[fidx]['note'] = strNote;\n\n    }\n\n\n\n\n    Global.locData[\"edus\"] = this.edus;\n    Global.svrData[\"edus\"] = [];\n\n\n    this.dlgSvc.close('dlgEdu');\n\n\n  }\n\n  onDelEdu() {\n\n    let fidx = this.edus.findIndex(x => x.title === this.eduSelected);\n    this.edus.splice(fidx, 1);\n\n    this.dlgSvc.close('dlgEdu');\n    Global.locData[\"edus\"] = this.edus;\n    Global.svrData[\"edus\"] = [];\n\n  }\n */\n\n  // Experience\n /*  onExp() {\n\n    this.exps = Global.locData[\"exps\"];\n    this.cboExps = [];\n\n    for (let idx = 0; idx < this.exps.length; idx++) {\n      this.cboExps.push(this.exps[idx]['title']);\n    }\n\n    this.cboExps.push('Add Experience');\n    this.exp = this.cboExps[0];\n    this.expSelected = this.exp;\n\n    if (this.exp == 'Add Experience') {\n      this.showExpTitle = true;\n\n    }\n    else {\n      this.showExpTitle = false;\n      this.expNote = this.exps[0]['note'];\n    }\n\n\n    this.dlgSvc.open('dlgExp');\n\n  }\n\n\n  onSelExp(exp) {\n\n    this.expSelected = exp;\n\n    if (exp == 'Add Experience') {\n      ;\n      this.expNote = '';\n      this.expTitle = '';\n      this.showExpTitle = true;\n    }\n    else {\n\n\n      let fidx = this.exps.findIndex(x => x.title === exp);\n      this.expNote = this.exps[fidx]['note'];\n      this.expTitle = this.exps[fidx]['title'];\n      this.showExpTitle = false;\n\n    }\n\n\n  }\n\n  onCancelExp() {\n    this.dlgSvc.close('dlgExp');\n  }\n\n  onSaveExp() {\n\n    let strNote = this.expNote.replace(/<p[^>]*>/g, '').replace(/<\\/p>/g, '<br />');\n\n    if (this.expSelected == 'Add Experience') {\n      this.exps.push({ title: this.expTitle, note: strNote });\n    }\n    else {\n      let fidx = this.exps.findIndex(x => x.title === this.expSelected);\n\n      this.exps[fidx]['note'] = strNote;\n\n    }\n\n    this.dlgSvc.close('dlgExp');\n    Global.locData[\"exps\"] = this.exps;\n    Global.svrData[\"exps\"] = []\n\n  }\n\n  onDelExp() {\n\n    let fidx = this.exps.findIndex(x => x.title === this.expSelected);\n    this.exps.splice(fidx, 1);\n    Global.locData[\"exps\"] = this.exps;\n    this.dlgSvc.close('dlgExp');\n\n  } */\n\n\n  // Photo\n  onAttach(evt, docType: string) {\n\n\n    var imagePath;\n    var imgURL: any;\n    let doc = {}\n\n    doc['docType'] = docType;\n    doc['docId'] = Global.docs.length + 1;\n    doc['docTable'] = docType;\n    doc['file'] = evt.target.files[0];\n    doc['docName'] = evt.target.files[0].name;\n\n   \n\n   \n\n    switch (docType) {\n      case \"photo\":\n        var mimeType = evt.target.files[0].type;\n        if (mimeType.match(/image\\/*/) == null) {\n          alert(\"Only images are supported.\");\n          return;\n        }\n\n\n        this.restSvc.makeImgFromBlob(evt.target.files[0])\n\n        break;\n      case \"moe\":\n        this.moeFile = evt.target.files[0].name;\n        break;\n      case \"cert\":   \n        this.attachCert = evt.target.files[0].name;\n        break ;\n        case \"acheive\":   \n        this.attachAcheive = evt.target.files[0].name;\n        break ;\n        default:\n        break;\n\n      \n\n    }\n\n\n\n\n\n    Global.docs.push(doc)\n\n    /*  doc['docType'] = 'Photo' ;\n     doc['id'] = '0000' ;\n     doc['table'] = 'photo' ; */\n\n    /*  doc['docType'] = 'Photo' ;\n     doc['docId'] = '0000' ;\n     doc['docTable'] = 'photo' ;\n \n     doc['file'] = evt.target.files[0] ;\n     \n     Global.docs.push(doc) ;\n     //Global.photoFile  = evt.target.files[0]; \n     \n     this.restSvc.makeImgFromBlob(evt.target.files[0]) ; */\n\n  }\n\n  get email() {\n    return Global.email;\n  }\n\n  set email(value) {\n    Global.email = value;\n  }\n\n\n}","<div class=\"mainContent\">\n  <div class=\"bg\" style=\"height:80vh;\">\n\n\n    <div *ngIf=\"clientName=='optimusMinds'\">\n\n      <div class=\"boxMoe\" (click)=\"onMoe()\">\n        MOE License\n      </div>\n\n      <div class=\"iconMoe\" (click)=\"onMoe()\">\n        <i class=\"material-icons\">play_arrow</i>\n      </div>\n\n    </div>\n\n\n\n\n    <div class=\"box0\" (click)=\"onProfile()\">\n      Personnal information\n    </div>\n\n\n\n\n\n\n\n    <div class=\"box1\" (click)=\"onAboutMe()\">\n      About Me\n    </div>\n\n\n    <div class=\"box2\" (click)=\"photo.click()\">\n      Photo\n      <input #photo type=\"file\" (change)=\"onAttach($event,'photo')\" style=\"display:none;\" />\n    </div>\n\n    <div class=\"box3\" (click)=\"onEdu()\">\n      Educational information\n    </div>\n\n    <div class=\"box4\" (click)=\"onExp()\">\n      Work Experiences\n    </div>\n\n    <div class=\"box5\" (click)=\"onCert()\">\n      Certifications\n    </div>\n\n\n    <div class=\"box6\" (click)=\"onSkill()\">\n      Skills\n    </div>\n\n\n    <div class=\"box7\" (click)=\"onAcheive()\">\n      Acheivements\n    </div>\n\n\n\n\n    <div class=\"icon0\" (click)=\"onProfile()\">\n      <i class=\"material-icons\">play_arrow</i>\n    </div>\n\n\n    <div class=\"icon1\" (click)=\"onAboutMe()\">\n      <i class=\"material-icons\">play_arrow</i>\n    </div>\n\n    <div class=\"icon2\" (click)=\"photo.click()\">\n      <i class=\"material-icons\">play_arrow</i>\n    </div>\n\n    <div class=\"icon3\" (click)=\"onEdu()\">\n      <i class=\"material-icons\">play_arrow</i>\n    </div>\n\n    <div class=\"icon4\" (click)=\"onExp()\">\n      <i class=\"material-icons\">play_arrow</i>\n    </div>\n\n\n    <div class=\"icon5\" (click)=\"onCert()\">\n      <i class=\"material-icons\">play_arrow</i>\n    </div>\n\n    <div class=\"icon6\" (click)=\"onSkill()\">\n      <i class=\"material-icons\">play_arrow</i>\n    </div>\n\n    <div class=\"icon7\" (click)=\"onAcheive()\">\n      <i class=\"material-icons\">play_arrow</i>\n    </div>\n\n\n\n  </div>\n</div>\n\n<dialog id=\"dlgProfile\">\n\n  <div fxFlex fxLayout=\"column\">\n\n\n    <label for=\"name\">Your Name *</label>\n    <input id=\"name\" name=\"name\" type=\"text\" [(ngModel)]=\"name\">\n\n\n    <div fxLayout=\"row wrap\">\n\n\n      <div fxLayout=\"column\">\n        <label for=\"dob\">Date of Birth *</label>\n        <input type=\"date\" id=\"dob\" name=\"dob\" [(ngModel)]=\"dob\" />\n      </div>\n\n      <div fxLayout=\"column\">\n        <label for=\"mobileNbr\">Mobile# *</label>\n        <input id=\"mobileNbr\" name=\"mobileNbr\" type=\"text\" [(ngModel)]=\"mobileNbr\" />\n      </div>\n\n\n    </div>\n\n\n    <label for=\"email\">Email</label>\n    <input disabled id=\"email\" name=\"email\" type=\"text\" [(ngModel)]=\"email\" />\n\n\n\n\n    <label for=\"note\">Address</label>\n\n    <quill-editor class=\"richText\" [(ngModel)]=\"address\" [modules]=\"{ toolbar: false }\">\n    </quill-editor>\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n      <div class=\"flushRight\"></div>\n\n\n      <button class=\"button-3d\" (click)=\"onCancelProfile()\">Cancel</button>\n      <button class=\"button-3d\" (click)=\"onSaveProfile()\">Save</button>\n\n    </div>\n  </div>\n\n</dialog>\n\n<dialog id=\"dlgAboutMe\">\n\n  <div fxFlex fxLayout=\"column\">\n\n\n\n    <label for=\"note\">About Me</label>\n\n    <quill-editor class=\"richText\" [(ngModel)]=\"aboutMe\" [modules]=\"{ toolbar: false }\">\n    </quill-editor>\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n      <div class=\"flushRight\"></div>\n\n\n      <button class=\"button-3d\" (click)=\"onCancelAboutMe()\">Cancel</button>\n      <button class=\"button-3d\" (click)=\"onSaveAboutMe()\">Save</button>\n\n    </div>\n  </div>\n</dialog>\n\n\n<dialog id=\"dlgEdu\">\n\n  <div fxFlex fxLayout=\"column\">\n\n\n\n    <label  *ngIf=\"!newEdu\" class=\"labelData\" for=\"edu\">Select Certification</label>\n    <select *ngIf=\"!newEdu\" class=\"inputData\" id=\"edu\" name=\"edu\" (change)=\"onSelEdu('cvSalon',$event.target.value)\" [(ngModel)]=\"edu\">\n      <option [value]=\"edu\" *ngFor=\"let edu of cboEdus\">\n        {{edu}}\n      </option>\n    </select>\n\n\n    <label *ngIf=\"newEdu\" for=\"eduTitle\">Certification</label>\n    <input *ngIf=\"newEdu\" id=\"eduTitle\" name=\"eduTitle\" type=\"text\" [(ngModel)]=\"eduTitle\" />\n\n\n    <label for=\"eduNote\">Description</label>\n\n    <quill-editor class=\"richText\" [(ngModel)]=\"eduNote\" [modules]=\"{ toolbar: false }\">\n    </quill-editor>\n\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n      <div class=\"flushRight\"></div>\n\n\n      <button *ngIf=\"!newEdu\"  class=\"button-3d\" (click)=\"onNewEdu('cvSalon')\">New</button>\n      <button *ngIf=\"!newEdu\"  class=\"button-3d\" (click)=\"onDelEdu('cvSalon')\">Delete</button>\n      <button class=\"button-3d\" (click)=\"onExitEdu('cvSalon')\">Exit</button>\n      <button class=\"button-3d\" (click)=\"onSaveEdu('cvSalon')\">Save</button> \n\n\n    </div>\n  </div>\n\n\n\n\n</dialog>\n\n<!-- <dialog id=\"dlgExp\">\n\n  <div fxFlex fxLayout=\"column\">\n\n\n\n    <label class=\"labelData\" for=\"exp\">Select Experience</label>\n    <select class=\"inputData\" id=\"exp\" name=\"exp\" (change)=\"onSelExp($event.target.value)\" [(ngModel)]=\"exp\">\n      <option [value]=\"exp\" *ngFor=\"let exp of cboExps\">\n        {{exp}}\n      </option>\n    </select>\n\n\n    <label *ngIf=\"showExpTitle\" for=\"expTitle\">Experience</label>\n    <input *ngIf=\"showExpTitle\" id=\"expTitle\" name=\"expTitle\" type=\"text\" [(ngModel)]=\"expTitle\" />\n\n\n    <label for=\"expNote\">Description</label>\n\n    <quill-editor class=\"richText\" [(ngModel)]=\"expNote\" [modules]=\"{ toolbar: false }\">\n    </quill-editor>\n\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n      <div class=\"flushRight\"></div>\n\n\n      <button class=\"button-3d\" (click)=\"onCancelExp()\">Cancel</button>\n      <button *ngIf=\"!showExpTitle\" class=\"button-3d\" (click)=\"onDelExp()\">Remove</button>\n      <button class=\"button-3d\" (click)=\"onSaveExp()\">Save</button>\n\n    </div>\n  </div>\n\n\n\n\n</dialog>\n -->\n\n\n <dialog id=\"dlgExp\">\n\n  <div fxFlex fxLayout=\"column\">\n\n\n\n    <label  *ngIf=\"!newExp\" class=\"labelData\" for=\"exp\">Select Experience</label>\n    <select *ngIf=\"!newExp\" class=\"inputData\" id=\"exp\" name=\"exp\" (change)=\"onSelExp('cvSalon',$event.target.value)\" [(ngModel)]=\"exp\">\n      <option [value]=\"exp\" *ngFor=\"let exp of cboExps\">\n        {{exp}}\n      </option>\n    </select>\n\n\n    <label *ngIf=\"newExp\" for=\"expTitle\">Experience</label>\n    <input *ngIf=\"newExp\" id=\"expTitle\" name=\"expTitle\" type=\"text\" [(ngModel)]=\"expTitle\" />\n\n\n    <label for=\"expNote\">Description</label>\n\n    <quill-editor class=\"richText\" [(ngModel)]=\"expNote\" [modules]=\"{ toolbar: false }\">\n    </quill-editor>\n\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n      <div class=\"flushRight\"></div>\n\n\n      <button *ngIf=\"!newExp\"  class=\"button-3d\" (click)=\"onNewExp('cvSalon')\">New</button>\n      <button *ngIf=\"!newExp\"  class=\"button-3d\" (click)=\"onDelExp('cvSalon')\">Delete</button>\n      <button class=\"button-3d\" (click)=\"onExitExp('cvSalon')\">Exit</button>\n      <button class=\"button-3d\" (click)=\"onSaveExp('cvSalon')\">Save</button> \n\n\n    </div>\n  </div>\n\n\n\n\n</dialog>\n\n<dialog id=\"dlgSkill\">\n\n  <div fxFlex fxLayout=\"column\">\n\n\n\n    <label  *ngIf=\"!newSkill\" class=\"labelData\" for=\"skill\">Select Skill</label>\n    <select *ngIf=\"!newSkill\" class=\"inputData\" id=\"skill\" name=\"skill\" (change)=\"onSelSkill('cvSalon',$event.target.value)\" [(ngModel)]=\"skill\">\n      <option [value]=\"skill\" *ngFor=\"let skill of cboSkills\">\n        {{skill}}\n      </option>\n    </select>\n\n\n    <label *ngIf=\"newSkill\" for=\"skillTitle\">Skill</label>\n    <input *ngIf=\"newSkill\" id=\"skillTitle\" name=\"skillTitle\" type=\"text\" [(ngModel)]=\"skillTitle\" />\n\n\n   <!--  <label for=\"skillNote\">Description</label>\n\n    <quill-editor class=\"richText\" [(ngModel)]=\"skillNote\" [modules]=\"{ toolbar: false }\">\n    </quill-editor> -->\n\n\n    <label for=\"skillRate\">Skill Rating</label>\n\n    <select class=\"inputData\" id=\"skillRate\" name=\"skillRate\" (change)=\"onSelSkillRate($event.target.value)\"\n      [(ngModel)]=\"skillRate\">\n      <option [value]=\"skillRate\" *ngFor=\"let skillRate of cboSkillRates\">\n        {{skillRate}}\n      </option>\n    </select>\n\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n      <div class=\"flushRight\"></div>\n\n\n      <button *ngIf=\"!newSkill\"  class=\"button-3d\" (click)=\"onNewSkill('cvSalon')\">New</button>\n      <button *ngIf=\"!newSkill\"  class=\"button-3d\" (click)=\"onDelSkill('cvSalon')\">Delete</button>\n      <button class=\"button-3d\" (click)=\"onExitSkill('cvSalon')\">Exit</button>\n      <button class=\"button-3d\" (click)=\"onSaveSkill('cvSalon')\">Save</button> \n\n\n    </div>\n  </div>\n\n\n\n\n</dialog>\n\n<dialog id=\"dlgAcheive\">\n\n  <div fxFlex fxLayout=\"column\">\n\n\n\n    <label  *ngIf=\"!newAcheive\" class=\"labelData\" for=\"acheive\">Select Acheivement</label>\n    <select *ngIf=\"!newAcheive\" class=\"inputData\" id=\"acheive\" name=\"acheive\" (change)=\"onSelAcheive('cvSalon',$event.target.value)\" [(ngModel)]=\"acheive\">\n      <option [value]=\"acheive\" *ngFor=\"let acheive of cboAcheives\">\n        {{acheive}}\n      </option>\n    </select>\n\n\n    <label *ngIf=\"newAcheive\" for=\"acheiveTitle\">Acheivement</label>\n    <input *ngIf=\"newAcheive\" id=\"acheiveTitle\" name=\"acheiveTitle\" type=\"text\" [(ngModel)]=\"acheiveTitle\" />\n\n\n    <label for=\"acheiveNote\">Description</label>\n\n    <quill-editor class=\"richText\" [(ngModel)]=\"acheiveNote\" [modules]=\"{ toolbar: false }\">\n    </quill-editor>\n\n    <br>\n\n    <div *ngIf=\"attachAcheive\" style=\"border: thin solid black;\" fxLayoutAlign=\"center center\">\n      <span> <i class=\"material-icons\" style=\"vertical-align: -6px;\">attachment</i> {{attachAcheive}}    </span>\n     </div>\n\n     \n    <div *ngIf=\"clientName=='optimusMinds'\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n\n      <button type=\"button\" (click)=\"acheiveFile.click()\">\n        <span>Attach Document</span>\n        <input #acheiveFile type=\"file\" (change)=\"onAttach($event,'acheive')\" style=\"display:none;\" />\n      </button>\n\n    </div>\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n      <div class=\"flushRight\"></div>\n\n\n      <button *ngIf=\"!newAcheive\"  class=\"button-3d\" (click)=\"onNewAcheive('cvSalon')\">New</button>\n      <button *ngIf=\"!newAcheive\"  class=\"button-3d\" (click)=\"onDelAcheive('cvSalon')\">Delete</button>\n      <button class=\"button-3d\" (click)=\"onExitAcheive('cvSalon')\">Exit</button>\n      <button class=\"button-3d\" (click)=\"onSaveAcheive('cvSalon')\">Save</button> \n\n\n    </div>\n  </div>\n\n\n\n\n</dialog>\n\n\n\n\n\n<!--  <dialog id=\"dlgSkill\">\n\n  <div fxFlex fxLayout=\"column\">\n\n\n    <label class=\"labelData\" for=\"skill\">Select Skill</label>\n    <select class=\"inputData\" id=\"skill\" name=\"skill\" (change)=\"onSelSkill($event.target.value)\" [(ngModel)]=\"skill\">\n      <option [value]=\"skill\" *ngFor=\"let skill of cboSkills\">\n        {{skill}}\n      </option>\n    </select>\n\n\n    <label *ngIf=\"showSkillTitle\" for=\"skillTitle\">Skill</label>\n    <input *ngIf=\"showSkillTitle\" id=\"skillTitle\" name=\"skillTitle\" type=\"text\" [(ngModel)]=\"skillTitle\" />\n\n\n    <label for=\"skillRate\">Skill Rating</label>\n\n    <select class=\"inputData\" id=\"skillRate\" name=\"skillRate\" (change)=\"onSelSkillRate($event.target.value)\"\n      [(ngModel)]=\"skillRate\">\n      <option [value]=\"skillRate\" *ngFor=\"let skillRate of cboSkillRates\">\n        {{skillRate}}\n      </option>\n    </select>\n\n\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n      <div class=\"flushRight\"></div>\n\n\n      <button class=\"button-3d\" (click)=\"onCancelSkill()\">Cancel</button>\n      <button *ngIf=\"!showSkillTitle\" class=\"button-3d\" (click)=\"onDelSkill()\">Remove</button>\n      <button class=\"button-3d\" (click)=\"onSaveSkill()\">Save</button>\n\n    </div>\n  </div>\n\n\n\n\n</dialog> -->\n\n<!-- <dialog id=\"dlgAcheive\">\n\n  <div fxFlex fxLayout=\"column\">\n\n\n    <label class=\"labelData\" for=\"acheive\">Select Acheivement</label>\n    <select class=\"inputData\" id=\"acheive\" name=\"acheive\" (change)=\"onSelAcheive($event.target.value)\"\n      [(ngModel)]=\"acheive\">\n      <option [value]=\"acheive\" *ngFor=\"let acheive of cboAcheives\">\n        {{ acheive }}\n      </option>\n    </select>\n\n\n    <label *ngIf=\"showAcheiveTitle\" for=\"acheiveTitle\">Acheivement</label>\n    <input *ngIf=\"showAcheiveTitle\" id=\"acheiveTitle\" name=\"acheiveTitle\" type=\"text\" [(ngModel)]=\"acheiveTitle\" />\n\n\n    <label for=\"acheiveNote\">Description</label>\n\n    <quill-editor class=\"richText\" [(ngModel)]=\" acheiveNote\" [modules]=\"{ toolbar: false }\">\n    </quill-editor>\n\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n      <div class=\"flushRight\"></div>\n\n\n      <button class=\"button-3d\" (click)=\"onCancelAcheive ()\">Cancel</button>\n      <button *ngIf=\"!showSkillTitle\" class=\"button-3d\" (click)=\"onDelAcheive ()\">Remove</button>\n      <button class=\"button-3d\" (click)=\"onSaveAcheive ()\">Save</button>\n\n    </div>\n  </div>\n\n\n\n\n</dialog>\n\n -->\n<dialog id=\"dlgCert\">\n\n  <div fxFlex fxLayout=\"column\">\n\n\n    <label *ngIf=\"!newCert\" class=\"labelData\" for=\"cert\">Select Certification</label>\n    <select *ngIf=\"!newCert\" class=\"inputData\" id=\"cert\" name=\"cert\" (change)=\"onSelCert('cvSalon',$event.target.value)\" [(ngModel)]=\"cert\">\n      <option [value]=\"cert\" *ngFor=\"let cert of cboCerts\">\n        {{ cert }}\n      </option>\n    </select>\n\n\n    <label *ngIf=\"newCert\"  for=\"certTitle\">Certification</label>\n    <input *ngIf=\"newCert\"  id=\"certTitle\" name=\"certTitle\" type=\"text\" [(ngModel)]=\"certTitle\" />\n\n\n    <label for=\"certNote\">Description</label>\n\n    <quill-editor class=\"richText\" [(ngModel)]=\"certNote\" [modules]=\"{ toolbar: false }\">\n    </quill-editor>\n\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n      <div class=\"flushRight\"></div>\n\n<!-- \n      <button class=\"button-3d\" (click)=\"onCancelCert()\">Cancel</button>\n      <button *ngIf=\"!showCertTitle\" class=\"button-3d\" (click)=\"onDelCert('dlgCert')\">Remove</button>\n      <button class=\"button-3d\" (click)=\"onSaveCert()\">Save</button>\n -->\n <br>\n <hr>\n\n      <button *ngIf=\"!newCert\"  class=\"button-3d\" (click)=\"onNewCert('cvSalon')\">New</button>\n      <button *ngIf=\"!newCert\"  class=\"button-3d\" (click)=\"onDelCert('cvSalon')\">Delete</button>\n      <button class=\"button-3d\" (click)=\"onExitCert('cvSalon')\">Exit</button>\n      <button class=\"button-3d\" (click)=\"onSaveCert('cvSalon')\">Save</button> \n\n    </div>\n  </div>\n\n\n\n\n</dialog>\n\n<dialog id=\"dlgCertOptimusMinds\">\n\n  <div fxFlex fxLayout=\"column\">\n\n\n    <label *ngIf=\"!newCert\" class=\"labelData\" for=\"cert\">Select Certification</label>\n    <select *ngIf=\"!newCert\" class=\"inputData\" id=\"cert\" name=\"cert\" (change)=\"onSelCert('optimusMinds', $event.target.value)\" [(ngModel)]=\"cert\">\n      <option [value]=\"cert\" *ngFor=\"let cert of cboCerts\">\n        {{ cert }}\n      </option>\n    </select>\n  \n    \n    <label *ngIf=\"newCert\" for=\"certTitle\">Certification</label>\n    <input *ngIf=\"newCert\" id=\"certTitle\" name=\"certTitle\" type=\"text\" [(ngModel)]=\"certTitle\" />\n\n    <label class=\"labelData\" for=\"cert\">Select Program</label>\n    <select class=\"inputData\" id=\"program\" name=\"program\" (change)=\"onSelProgram($event.target.value)\" [(ngModel)]=\"program\">\n      <option [value]=\"program\" *ngFor=\"let program of programs\">\n        {{ program }}\n      </option>\n    </select>\n\n    <br>\n\n    <div *ngIf=\"attachCert\" style=\"border: thin solid black;\" fxLayoutAlign=\"center center\">\n      <span> <i class=\"material-icons\" style=\"vertical-align: -6px;\">attachment</i> {{attachCert}}    </span>\n     </div>\n \n\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n\n      <button type=\"button\" (click)=\"certFile.click()\">\n        <span>Attach Certificate</span>\n        <input #certFile type=\"file\" (change)=\"onAttach($event,'cert')\" style=\"display:none;\" />\n      </button>\n\n    </div>\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n      <div class=\"flushRight\"></div>\n\n      <button *ngIf=\"!newCert\" class=\"button-3d\" (click)=\"onNewCert('optimusMinds')\">New</button>\n      <button *ngIf=\"!newCert\" class=\"button-3d\" (click)=\"onDelCert('optimusMinds')\">Delete</button>\n      <button class=\"button-3d\" (click)=\"onExitCert('optimusMinds')\">Exit</button>\n      <button class=\"button-3d\" (click)=\"onSaveCert('optimusMinds')\">Save</button> \n\n    </div>\n  </div>\n\n\n\n\n</dialog>\n\n\n\n<dialog id=\"dlgMoe\">\n\n  <div fxFlex fxLayout=\"column\">\n\n    <label for=\"moeExpiry\">MOE License Expiry Date</label>\n    <input id=\"moeExpiry\" name=\"moeExpiry\" type=\"date\" [(ngModel)]=\"moeExpiry\" />\n\n    <p class=\"header\">Qualified to train programs in : </p>\n\n\n\n    <div class=\"chkBoxes\">\n\n\n      <input class=\"leftA\" id=\"ai\" name=\"ai\" type=\"checkbox\" [(ngModel)]=\"aiChk\" />\n      <label class=\"rightA\" for=\"ai\">Artificial Intelligence</label>\n\n      <input class=\"leftA\" id=\"atRisk\" name=\"atRisk\" type=\"checkbox\" [(ngModel)]=\"atRiskChk\" />\n      <label class=\"rightA\" for=\"atRisk\">At Risk</label>\n\n      <input class=\"leftA\" id=\"career\" name=\"career\" type=\"checkbox\" [(ngModel)]=\"careerChk\" />\n      <label class=\"rightA\" for=\"career\">Career Perparation</label>\n\n      <input class=\"leftA\" id=\"dance\" name=\"dance\" type=\"checkbox\" [(ngModel)]=\"danceChk\" />\n      <label class=\"rightA\" for=\"dance\">Dance</label>\n\n      <input class=\"leftA\" id=\"drama\" name=\"drama\" type=\"checkbox\" [(ngModel)]=\"dramaChk\" />\n      <label class=\"rightA\" for=\"drama\">Drama</label>\n\n      <input class=\"leftA\" id=\"it\" name=\"it\" type=\"checkbox\" [(ngModel)]=\"itChk\" />\n      <label class=\"rightA\" for=\"it\">IT\\Multimedia</label>\n\n      <input class=\"leftA\" id=\"skills\" name=\"skills\" type=\"checkbox\" [(ngModel)]=\"skillsChk\" />\n      <label class=\"rightA\" for=\"skills\">Life Skills\\Soft Skills</label>\n\n      <input class=\"leftB\" id=\"tongue\" name=\"tongue\" type=\"checkbox\" [(ngModel)]=\"tongueChk\" />\n      <label class=\"rightB\" for=\"tongue\">Mother Tongue</label>\n\n      <input class=\"leftB\" id=\"music\" name=\"music\" type=\"checkbox\" [(ngModel)]=\"musicChk\" />\n      <label class=\"rightB\" for=\"music\">Music</label>\n\n      <input class=\"leftB\" id=\"outdoor\" name=\"outdoor\" type=\"checkbox\" [(ngModel)]=\"outdoorChk\" />\n      <label class=\"rightB\" for=\"outdoor\">Outdoor Education</label>\n\n\n      <input class=\"leftB\" id=\"sports\" name=\"sports\" type=\"checkbox\" [(ngModel)]=\"sportsChk\" />\n      <label class=\"rightB\" for=\"sports\">Sports</label>\n\n      <input class=\"leftB\" id=\"visual\" name=\"visual\" type=\"checkbox\" [(ngModel)]=\"visualChk\" />\n      <label class=\"rightB\" for=\"visual\">Visual Arts</label>\n\n\n\n\n    </div>\n\n\n\n    <div style=\"border: thin solid black;\" fxLayoutAlign=\"center center\">\n      <span> <i class=\"material-icons\" style=\"vertical-align: -6px;\">attachment</i> {{moeFile}}    </span>\n     </div>\n \n\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\n\n      <button type=\"button\" (click)=\"moeDoc.click()\">\n        <span>Add MOE License*</span>\n        <input #moeDoc type=\"file\" (change)=\"onAttach($event,'moe')\" style=\"display:none;\" />\n      </button>\n\n    </div>\n\n\n    <div fxLayout=\"row\" fxLayoutAlign=\"center end\">\n\n      <!--  <div class=\"flushRight\"></div> -->\n\n      <button class=\"button-3d\" (click)=\"onCancelMoe()\">Cancel</button>\n      <button class=\"button-3d\" (click)=\"onSaveMoe()\">Save</button>\n\n    </div>\n  </div>\n\n\n\n\n</dialog>","\nimport { Component, OnInit } from '@angular/core';\nimport { Global } from '../../lib/global' ;\nimport { HttpEventType, HttpErrorResponse } from '@angular/common/http';\nimport { of } from 'rxjs';  \nimport { catchError, map } from 'rxjs/operators';  \nimport { RestSvc } from  '../../lib/restSvc';\n\n\n@Component({\n  selector: 'app-cv-salon-viewer',\n templateUrl: './cv-salon-viewer.component.html',\n  //templateUrl: './temp.html',\n  styleUrls: ['./cv-salon-viewer.component.scss']\n//  styleUrls: ['./temp.scss'],\n})\nexport class CvSalonViewerComponent implements OnInit {\n\n  \n  public files: any[];\n  public resp = \"\" ;\n\n  isImageLoading = false ;\n  //photo: any ; \n  client = 'cvSalon' ;\n\n\n\n  constructor(private restSvc: RestSvc) {\n    this.files = [];\n  }\n\n  ngOnInit(): void {\n   // this.photo = Global.photo ;\n  }   \n\n  get clientName() {\n    return Global.clientName;\n  }\n \n  get programs() {\n    return Global.locData[\"programs\"];\n   \n  }\n\n  get name() {\n    return Global.locData[\"name\"];\n  }\n  \n  \n  get aboutMe() {\n    return Global.locData[\"aboutMe\"];\n    \n  }\n  \n    \n  \n    get dob() {\n      return Global.locData[\"dob\"];\n    }\n  \n  \n    get mobileNbr() {\n\n      return Global.locData[\"mobileNbr\"];\n      \n       \n  \n     \n  \n    }\n  \n    get address() {\n  \n      return  Global.locData[\"address\"];\n   } \n  \n  \n    \n   \n    get email() {\n      \n      return Global.locData[\"email\"];\n\n\n \n\n  }\n\n  get edus() {\n    return   Global.locData[\"edus\"] ;\n  }\n\n  get exps() {\n    return   Global.locData[\"exps\"] ;\n  }\n\n  get certs() {\n    return   Global.locData[\"certs\"] ;\n  }\n\n  get skills() {\n    return   Global.locData[\"skills\"] ;\n  }\n\n  get acheives() {\n    return   Global.locData[\"acheives\"] ;\n  }\n\n\n  get photo() {\n\n     return Global.photo ;\n  }\n  \n  programHasCert(paraProgram) {\n    \n   return (Global.locData[\"certs\"].findIndex(item => item.program == paraProgram) >= 0) ? true : false ;\n     \n  }\n}\n\n\n","<div class=\"mainContent\"   id=\"cvSalon\">\r\n\r\n\r\n    <div style=\"background-color: black;color:black\" class=\"cssLeftWysiwyg\" fxFlex=\"2 1 30%\" >\r\n  \r\n        <img [src]=\"photo\" alt=\"My Photo\">\r\n\r\n\r\n        <div class=\"cssName\">\r\n          {{name}}\r\n        </div>\r\n    \r\n        <hr />\r\n        \r\n        <div class=\"cssTitle\" *ngIf=\"aboutMe\">\r\n          ABOUT ME\r\n        </div>\r\n    \r\n        <div class=\"cssText\">\r\n          <div [innerHTML]=\"aboutMe\"></div>\r\n        </div>\r\n    \r\n        <div *ngIf=\"aboutMe\">\r\n          <hr />\r\n        </div>\r\n    \r\n    \r\n        <div class=\"cssTitle\" *ngIf=\"skills.length > 0\">\r\n          SKILLS:\r\n        </div>\r\n    \r\n        <div *ngFor=\"let skill of skills;\"  class=\"cssText\">\r\n          <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n    \r\n            {{skill.title}}\r\n    \r\n            <div class=\"cssText\" *ngIf=\"skill.rate == '1 Star'\">\r\n              <i class=\"material-icons smallIcon\">star</i>\r\n    \r\n              <span style=\"color:gray;\">\r\n                <i class=\"material-icons smallIcon\">star</i>\r\n                <i class=\"material-icons smallIcon\">star</i>\r\n                <i class=\"material-icons smallIcon\">star</i>\r\n                <i class=\"material-icons smallIcon\">star</i>\r\n              </span>\r\n            </div>\r\n    \r\n    \r\n            <div class=\"cssText\" *ngIf=\"skill.rate == '2 Stars'\">\r\n              <i class=\"material-icons smallIcon\">star</i>\r\n              <i class=\"material-icons smallIcon\">star</i>\r\n    \r\n              <span style=\"color:gray;\">\r\n                <i class=\"material-icons smallIcon\">star</i>\r\n                <i class=\"material-icons smallIcon\">star</i>\r\n                <i class=\"material-icons smallIcon\">star</i>\r\n              </span>\r\n    \r\n            </div>\r\n            <div class=\"cssText\" *ngIf=\"skill.rate == '3 Stars'\">\r\n              <i class=\"material-icons smallIcon\">star</i>\r\n              <i class=\"material-icons smallIcon\">star</i>\r\n              <i class=\"material-icons smallIcon\">star</i>\r\n              <span style=\"color:gray;\">\r\n                <i class=\"material-icons smallIcon\">star</i>\r\n                <i class=\"material-icons smallIcon\">star</i>\r\n              </span>\r\n    \r\n            </div>\r\n            <div class=\"cssText\" *ngIf=\"skill.rate == '4 Stars'\">\r\n              <i class=\"material-icons smallIcon\">star</i>\r\n              <i class=\"material-icons smallIcon\">star</i>\r\n              <i class=\"material-icons smallIcon\">star</i>\r\n              <i class=\"material-icons smallIcon\">star</i>\r\n              <span style=\"color:gray;\">\r\n    \r\n                <i class=\"material-icons smallIcon\">star</i>\r\n              </span>\r\n    \r\n            </div>\r\n            <div class=\"cssText\" *ngIf=\"skill.rate == '5 Stars'\">\r\n              <i class=\"material-icons smallIcon\">star</i>\r\n              <i class=\"material-icons smallIcon\">star</i>\r\n              <i class=\"material-icons smallIcon\">star</i>\r\n              <i class=\"material-icons smallIcon\">star</i>\r\n              <i class=\"material-icons smallIcon\">star</i>\r\n    \r\n    \r\n            </div>\r\n    \r\n    \r\n    \r\n          </div>\r\n    \r\n    \r\n        </div>\r\n    \r\n        <div *ngIf=\"skills.length > 0\">\r\n          <hr />\r\n        </div>\r\n\r\n        <div class=\"cssTitle\" *ngIf=\"programs.length > 0\">\r\n          Qualified to train programs in\r\n        </div>\r\n    \r\n        <div *ngFor=\"let program of programs;\" class=\"cssText\">\r\n          <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n            {{program}}\r\n          </div>\r\n        </div>\r\n    \r\n    \r\n        <div *ngIf=\"programs.length > 0\">\r\n          <hr />\r\n        </div>\r\n    \r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n    \r\n          <i class=\"material-icons\" *ngIf='mobileNbr'>phone</i> {{mobileNbr}}\r\n        </div>\r\n    \r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n    \r\n          <i class=\"material-icons\" *ngIf='email'>email</i> {{email}}\r\n        </div>\r\n    \r\n        <div fxLayout=\"row\" fxLayoutAlign=\"center center\">\r\n          <i class=\"material-icons\" *ngIf='address'>home</i>\r\n        </div>\r\n    \r\n        <div fxLayout=\"columns\" fxLayoutAlign=\"center center\">\r\n          <div [innerHTML]=\"address\"></div>\r\n        </div>\r\n    \r\n      </div>\r\n\r\n      \r\n      \r\n\r\n      \r\n        <div style=\"background-color: white;color:black\" fxFlex=\"2 1 70%\" fxLayout=\"column\">\r\n    \r\n            \r\n    <!-- Education -->\r\n    <div class=\"cssTitleRight\" *ngIf=\"edus.length > 0\">\r\n        EDUCATION:\r\n      </div>\r\n      <ul>\r\n        <div *ngFor=\"let edu of edus;\">\r\n          <li>{{edu.title}} </li>\r\n  \r\n  \r\n          <div [innerHTML]=\"edu.note\"></div>\r\n  \r\n          <br>\r\n        </div>\r\n      </ul>\r\n  \r\n      <!-- Experience -->\r\n      <div class=\"cssTitleRight\" *ngIf=\"exps.length > 0\">\r\n        EXPERIENCE:\r\n      </div>\r\n      <ul>\r\n        <div *ngFor=\"let exp of exps;\">\r\n          <li>{{exp.title}} </li>\r\n  \r\n  \r\n          <div [innerHTML]=\"exp.note\"></div>\r\n  \r\n          <br>\r\n        </div>\r\n      </ul>\r\n  \r\n  \r\n      <!-- Skills -->\r\n  \r\n  \r\n      <!-- Certs -->\r\n      <div class=\"cssTitleRight\" *ngIf=\"certs.length > 0\">\r\n        CERTIFICATIONS:\r\n      </div>\r\n  \r\n      <div *ngIf=\"clientName=='cvSalon'\">\r\n        <ul>\r\n          <div *ngFor=\"let cert of certs;\">\r\n  \r\n            <li>{{cert.title}} </li>\r\n  \r\n  \r\n            <div [innerHTML]=\"cert.note\"></div>\r\n  \r\n            <br>\r\n          </div>\r\n        </ul>\r\n      </div>\r\n  \r\n    \r\n      <div *ngIf=\"clientName=='optimusMinds'\">\r\n        <ul>\r\n  \r\n          <div *ngFor=\"let program of programs;\">\r\n  \r\n              <div class=\"cssLabel\" *ngIf=\"programHasCert(program)\" >\r\n                 {{ program }} \r\n              </div>\r\n            <ul>\r\n            <div *ngFor=\"let cert of certs;\">\r\n              <div *ngIf=\"cert.program == program\">\r\n                <li>{{cert.title}} </li>\r\n              </div>\r\n            </div>\r\n          </ul>\r\n  \r\n            <br>\r\n          </div>\r\n        </ul>\r\n      </div>\r\n  \r\n  \r\n      <!-- Certs -->\r\n      <div class=\"cssTitleRight\" *ngIf=\"acheives.length > 0\">\r\n        ACHIEVEMENTS :\r\n      </div>\r\n      <ul>\r\n        <div *ngFor=\"let acheive of acheives;\">\r\n          <li>{{acheive.title}} </li>\r\n  \r\n  \r\n          <div [innerHTML]=\"acheive.note\"></div>\r\n  \r\n          <br>\r\n        </div>\r\n      </ul>\r\n  \r\n\r\n    </div>\r\n\r\n</div>\r\n \r\n ","import { Component, OnInit } from '@angular/core';\nimport { Global } from '../lib/global' ;\n\n@Component({\n  selector: 'app-cv-salon-site',\n  template:  `<div class=\"flex-container\">\n  <div fxLayout=\"row wrap\">\n    <div  fxFlex=\"100%\" fxFlex.gt-sm=\"50%\" >\n           <app-cv-salon-composer></app-cv-salon-composer> \n    </div>\n    <div  fxFlex=\"100%\" fxFlex.gt-sm=\"50%\">\n          <app-cv-salon-viewer></app-cv-salon-viewer> \n    </div> \n    </div> \n   \n  </div>`\n})\nexport class CvSalon implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n\n}\n\n/* \nget clientName() {\n  return Global.clientName;\n}\n\nget programs() {\n  return Global.locData[\"programs\"];\n \n}\n\nget name() {\n  return Global.locData[\"name\"];\n}\n\n\nget aboutMe() {\n  return Global.locData[\"aboutMe\"];\n  \n}\n\n  \n  get dob() {\n    return Global.locData[\"dob\"];\n  }\n\n\n  get mobileNbr() {\n\n    return Global.locData[\"mobileNbr\"];\n    \n     \n\n   \n\n  }\n\n  get address() {\n\n    return  Global.locData[\"address\"];\n } \n\n\n  \n \n  get email() {\n    \n    return Global.locData[\"email\"];\n\n\n\n\n}\n\nget edus() {\n  return   Global.locData[\"edus\"] ;\n}\n\nget exps() {\n  return   Global.locData[\"exps\"] ;\n}\n\nget certs() {\n  return   Global.locData[\"certs\"] ;\n}\n\nget skills() {\n  return   Global.locData[\"skills\"] ;\n}\n\nget acheives() {\n  return   Global.locData[\"acheives\"] ;\n}\n\n\nget photo() {\n\n   return Global.photo ;\n}\n\nprogramHasCert(paraProgram) {\n  \n return (Global.locData[\"certs\"].findIndex(item => item.program == paraProgram) >= 0) ? true : false ;\n   \n}\n\n}\n */\n\n/* <div class=\"flex-container\">\n<div fxLayout=\"row\">\n  <div  fxFlex=\"100%\" fxFlex.gt-sm=\"50%\" >\n         <app-cv-salon-composer></app-cv-salon-composer> \n  </div>\n  <div  fxFlex=\"50%\" fxHide fxShow.gt-sm >\n  <app-cv-salon-viewer></app-cv-salon-viewer> \n  </div> \n  </div> \n  \n</div>\n` */","import { Component, OnInit } from '@angular/core';\nimport { Global } from '../lib/global';\n/* \nimport { ModalService } from '../lib/_modal'; \nimport { RestSvc } from  '../lib/restSvc';\nimport { FormBuilder, FormGroup, CheckboxRequiredValidator } from '@angular/forms';\nimport { HttpEventType, HttpErrorResponse } from '@angular/common/http';\nimport { of } from 'rxjs';  \nimport { catchError, map } from 'rxjs/operators';  \nimport * as jspdf from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport { stringify } from 'querystring';\n */\nimport {CtrlSvc} from '../lib/ctrlSvc' ;\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n \n  \n  constructor(private ctrlSvc: CtrlSvc) { }\n\n  ngOnInit(): void {\n  }\n\n public onSubmit()\n{\n  this.ctrlSvc.onSubmit() ;\n}\n\n public onQry()\n{\n  this.ctrlSvc.onQry() ;\n}\n\npublic onPdf()\n{\n  this.ctrlSvc.onPdf() ;\n}\n\nget domainName() {\n  return Global.domainName ;\n}\n\nget logo() {\n   return Global.logo ;\n}\n\n}","<div class=\"container\">\n<header>\n  \n    <div fxLayout=\"row\" fxLayoutAlign=\"start center\" >\n        <!-- GAP -->\n      <div fxFlex=\"1\" ></div> \n    \n\n        <img [src]=\"logo\" alt=\"logo\" >\n        {{domainName}}\n\n       \n    \n    </div>    \n            \n      \n</header>\n\n</div>\n\n<!-- <jw-modal id=\"dlgErrOld\" class=\"dlg\">\n\n    <div fxFlex fxLayout=\"column\" class=\"dialog1\">\n \n        <h1>Errors</h1>\n        \n       <ol>\n           <div *ngFor=\"let err of errList;\"> \n                    <li>     {{err}}    </li>\n           </div>\n       </ol>\n    \n    \n    \n    <div  fxLayout=\"row\" fxLayoutAlign=\"end center\" class=\"btn\" >\n       \n        <button  (click)=\"onErrClose();\">Ok</button>\n    </div>\n        </div>\n  \n</jw-modal> \n -->\n<!-- <jw-modal id=\"dlgSubmitOld\" class=\"dlg\">\n\n\n    <div fxFlex fxLayout=\"column\" class=\"dialog1\">\n \n    <h1>Submit</h1>\n  \n  \n  <div  fxLayout=\"row\" fxLayoutAlign=\"start start\" >\n  <input  id=\"declare\" name=\"ai\" type=\"checkbox\"  [(ngModel)] = \"declareChk\" />\n   <label  for=\"declare\">I declare the infomation provided by me to be true.</label>\n</div>\n<div  fxLayout=\"row\">\n   <input  id=\"share\" name=\"share\" type=\"checkbox\" [(ngModel)] = \"shareChk\" />\n   <label  for=\"share\">I allow for my information to be shared with prospective client\\s.</label>\n</div>     \n\n<br>\n\n\n\n<div class=\"checkboxes\">\n    <label class=\"lbl\" for=\"x\"><input type=\"checkbox\" id=\"declare\" [(ngModel)] = \"declareChk\" /> <span>I declare the infomation provided by me to be true.</span></label>\n    <br>\n    <label class=\"lbl\" for=\"y\"><input type=\"checkbox\" id=\"y\"  [(ngModel)] = \"shareChk\" /> <span>I allow for my information to be shared with prospective client\\s</span></label>\n\n  </div>\n  <br>\n\n  <div *ngIf=\"docs.length > 0\" class='docs'>  Documents to be uploaded : </div>\n   <ol>\n       <div *ngFor=\"let doc of docs;\"> \n                <li>     {{doc.docTable}} :  {{doc.docName}}     </li>\n       </div>\n   </ol>\n\n<div  fxLayout=\"row\" fxLayoutAlign=\"end center\" class=\"btn\" >\n    <button  (click)=\"cancelSubmit();\">Cancel</button>\n    <button  [disabled]=\"disableSubmit()\" (click)=\"okSubmit();\">Ok</button>\n</div>\n    </div>\n  \n </jw-modal> \n -->\n\n<!-- \n<jw-modal id=\"dlgAuthOld\" class=\"dlg\"> \n\n\n    <div fxFlex fxLayout=\"column\" fxLayoutAlign=\"center center\" class=\"dialog\">\n \n    <div *ngIf=\"dlgAuthMode===1\">\n    \n    <h1>LogIn via Email</h1>\n     <p>\n        Please provide an email address to receive an authorisation pin for access.   \n     </p>\n\n\n     <div fxLayout=\"row\" >\n        <div fxLayout=\"column\" >\n      <label for=\"email\">Email</label>\n      <input  id=\"email\" name=\"email\" type=\"text\" [(ngModel)] = \"email\" />\n\n    </div>\n</div>\n    <div  fxLayout=\"row\" fxLayoutAlign=\"end center\" class=\"btn\" >\n        <button  (click)=\"onAuthEmail();\">Ok</button>\n    </div> \n    <label for=\"email\">Email Address</label>\n     <input id=\"email\" name=\"email\" type=\"text\" [(ngModel)] = \"email\">\n\n            <div  fxLayout=\"row\" fxLayoutAlign=\"end center\" class=\"btn\" >\n                    <button  (click)=\"onAuthEmail();\">Ok</button>\n            </div> -->\n\n<!--      \n</div>\n     <div *ngIf=\"dlgAuthMode===2\">\n\n        <h1>Provide PIN</h1>\n        <p>\n            An authorisation PIN code has been sent to {{email}}. \n            \n         </p>\n\n\n\n        <div fxLayout=\"row\" >\n            <div fxLayout=\"column\" >\n          <label for=\"email\">Enter PIN Code</label>\n          <input id=\"pin\" name=\"pin\" type=\"text\" [(ngModel)] = \"pin\">\n\n    \n        </div>\n    </div>\n\n        <div  fxLayout=\"row\" fxLayoutAlign=\"end center\" class=\"btn\" >\n            <button  (click)=\"onAuthClose();\">Ok</button>\n        </div>\n    </div>\n\n\n</div>\n </jw-modal> -->   \n","import { Injectable } from '@angular/core';\r\nimport { Global } from './global';\r\nimport { DialogService } from './dialog';\r\nimport { RestSvc } from './restSvc';\r\nimport * as jspdf from 'jspdf';\r\nimport html2canvas from 'html2canvas';\r\nimport { stringToKeyValue } from '@angular/flex-layout/extended/typings/style/style-transforms';\r\nimport { stringify } from 'querystring';\r\n\r\nimport { of } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport * as FileSaver from 'file-saver';\r\nimport { HttpClient, HttpEvent, HttpErrorResponse, HttpEventType, HttpHeaders } from '@angular/common/http';\r\nimport * as JSZip from 'jszip';  \r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CtrlSvc {\r\n\r\n  errList = [];\r\n  docs = [];\r\n\r\n  constructor(private restSvc: RestSvc, private dlgSvc: DialogService,private httpClient: HttpClient) { }\r\n\r\n\r\n  onSubmit() {\r\n\r\n\r\n\r\n    this.errList = [];\r\n    let aryKeys = Object.keys(Global.locData);\r\n\r\n\r\n\r\n    for (let idx = 0; idx < aryKeys.length; idx++) {\r\n\r\n\r\n      switch (aryKeys[idx]) {\r\n        /* case 'moeExpiry':\r\n          if (Global.locData[aryKeys[idx]] === '') {\r\n            this.errList.push('MOE Expiry date cannot be empty');\r\n          }\r\n          break; */\r\n        case 'name':\r\n          if (Global.locData[aryKeys[idx]] === '') {\r\n            this.errList.push('Name cannot be empty');\r\n          }\r\n          break;\r\n        case 'email':\r\n          if (Global.locData[aryKeys[idx]] === '') {\r\n            this.errList.push('Email cannot be empty');\r\n          }\r\n          break\r\n        case 'dob':\r\n          if (Global.locData[aryKeys[idx]] === '') {\r\n            this.errList.push('Date of birth cannot be empty');\r\n          }\r\n          break\r\n        /* case 'idNbr':\r\n          if (Global.locData[aryKeys[idx]] === '') {\r\n            this.errList.push('Identity number cannot be empty');\r\n          }\r\n          break */\r\n        case 'mobileNbr':\r\n          if (Global.locData[aryKeys[idx]] === '') {\r\n            this.errList.push('Mobile number cannot be empty');\r\n          }\r\n          break\r\n\r\n      }\r\n    }\r\n\r\n    if (this.errList.length > 0) {\r\n\r\n      Global.errList = this.errList ;\r\n       \r\n      this.dlgSvc.open('dlgErr'); {\r\n        return;\r\n\r\n      }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    this.docs = []\r\n\r\n    for (let i = 0; i < Global.docs.length; i++) {\r\n      var doc = { docTable: Global.docs[i]['docTable'], docName: Global.docs[i]['file'].name };\r\n      this.docs.push(doc);\r\n    }\r\n\r\n\r\n    this.dlgSvc.open('dlgSubmit');\r\n\r\n\r\n\r\n  }\r\n\r\n  onQry() {\r\n\r\n\r\n    Global.makeProgramList();\r\n\r\n    \r\n\r\n    this.restSvc.qryTrainer(Global.locData[\"programs\"]).then(\r\n      (rcvd) => {\r\n\r\n        let obj = {};\r\n        Global.trainersExist = false ;\r\n\r\n        obj[\"list\"] = rcvd;\r\n\r\n        Global.trainers = obj[\"list\"];\r\n\r\n        Global.trainersExist = true ;\r\n\r\n\r\n      },\r\n      (err) => {\r\n\r\n        Global.trainersExist = false ;\r\n      }\r\n    )\r\n\r\n  }\r\n\r\n  onPdf() {\r\n\r\n\r\nvar name = Global.name ;\r\nvar data = document.getElementById('cvSalon');\r\nhtml2canvas(data).then(canvas => {\r\n// Few necessary setting options\r\nvar imgWidth = 208;\r\nvar pageHeight = 295;\r\nvar imgHeight = canvas.height * imgWidth / canvas.width;\r\nvar heightLeft = imgHeight;\r\n \r\nconst contentDataURL = canvas.toDataURL('image/png')\r\nlet pdf = new jspdf('p', 'mm', 'a4'); // A4 size page of PDF\r\nvar position = 0;\r\n\r\npdf.addImage(contentDataURL, 'PNG', 0, position, imgWidth, imgHeight)\r\n\r\npdf.save(name); // Generated PDF\r\n\r\n\r\n\r\n// pdf.save(\"myfile.pdf\", {returnPromise:true}).then(alert('PDF render all done!'));\r\n\r\n// var blob = pdf.output('blob'\r\n\r\n\r\n}); \r\n\r\n  }\r\n\r\n\r\n  async onPdfBlob(zip) {\r\n\r\n\r\n    var name = Global.name ;\r\n    var data = document.getElementById('cvSalon');\r\n    html2canvas(data).then(canvas => {\r\n    // Few necessary setting options\r\n    var imgWidth = 208;\r\n    var pageHeight = 295;\r\n    var imgHeight = canvas.height * imgWidth / canvas.width;\r\n    var heightLeft = imgHeight;\r\n     \r\n    const contentDataURL = canvas.toDataURL('image/png')\r\n    let pdf = new jspdf('p', 'mm', 'a4'); // A4 size page of PDF\r\n    var position = 0;\r\n    \r\n    pdf.addImage(contentDataURL, 'PNG', 0, position, imgWidth, imgHeight)\r\n    \r\n     \r\n    // var blobData = pdf.output('blob') ;\r\n\r\n     //pdf.output(\"myfile.pdf\", {returnPromise:true}).then(alert('PDF render all done!'));\r\n    \r\n    // pdfBlob = new Blob([pdf.output('blob')], {type: 'application/pdf'}) ;\r\n\r\n     zip.file('cv.pdf',  new Blob([pdf.output('blob')], {type: 'application/pdf'}) ) ;\r\n    \r\n    }); \r\n    \r\n      }\r\n\r\n\r\n\r\n\r\nonZipPack() {\r\n    \r\n\r\n // alert(Global._id) ;\r\n // alert(Global.locData[\"name\"]) ;\r\n\r\n  this.createZip(Global.locData[\"name\"]) ;\r\n\r\n\r\n}\r\n\r\n  async getFile(doc) {  \r\n    const httpOptions = {  \r\n      responseType: 'blob' as 'json'  \r\n    };  \r\n\r\n  \r\n    let apiEp = `${this.restSvc.SERVER_URL}${Global.tableName}/downLoadFile/${Global._id}/folder/${doc[\"folder\"]}/file/${doc[\"file\"]}` ;\r\n\r\n\r\n    const res = await this.httpClient.get( apiEp , httpOptions).toPromise().catch((err: HttpErrorResponse) => {  \r\n      const error = err.error;  \r\n      return error;  \r\n    });  \r\n    return res;  \r\n  }  \r\n\r\n  async createZip(zipName: string) {  \r\n    const zip = new JSZip();  \r\n    const name = zipName + '.zip';  \r\n   // const pdfBlob: any\r\n   //\r\n    const pdfBlob: any = this.onPdfBlob(zip) ;\r\n    \r\n    \r\n    // tslint:disable-next-line:prefer-for-of  \r\n    for (let counter = 0; counter < Global.docs.length; counter++) {  \r\n      const doc  =  Global.docs[counter];  \r\n     \r\n    \r\n\r\n      \r\n    const fileData: any = await this.getFile(doc);  \r\n      const b: any = new Blob([fileData], { type: '' + fileData.type + '' });  \r\n      zip.file(doc['file'], b);  \r\n    }  \r\n    \r\n    zip.generateAsync({ type: 'blob' }).then((content) => {  \r\n       if (content) {  \r\n         FileSaver.saveAs(content, name);  \r\n       }  \r\n     });  \r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//onZipPack() {\r\n\r\n\r\n//   var data = document.getElementById('cvSalon');\r\n//   html2canvas(data).then(canvas => {\r\n//   // Few necessary setting options\r\n//   var imgWidth = 208;\r\n//   var pageHeight = 295;\r\n//   var imgHeight = canvas.height * imgWidth / canvas.width;\r\n//   var heightLeft = imgHeight;\r\n   \r\n//   const contentDataURL = canvas.toDataURL('image/png')\r\n//   let pdf = new jspdf('p', 'mm', 'a4'); // A4 size page of PDF\r\n//   var position = 0;\r\n  \r\n//   pdf.addImage(contentDataURL, 'PNG', 0, position, imgWidth, imgHeight)\r\n  \r\n//  pdf.save(name); // Generated PDF\r\n \r\n\r\n\r\n// var folder = 'cert' ; \r\n// var docs = []\r\n\r\n//  docs.push({fileName: 'mobileIndo.docx', folder: folder}) ;\r\n//  docs.push({fileName: 'hardeepSkill Matrix.docx', folder: folder}) ;\r\n//  docs.push({fileName: 'trainerPhoto.png', folder: folder}) ;\r\n\r\n// var fileName = `{Global._id}.zip` ; \r\n\r\n\r\n\r\n//   const formData = new FormData();\r\n\r\n//   formData.append('_id', Global._id);\r\n//   formData.append('name', Global.name + \".zip\");\r\n//   formData.append('docs', JSON.stringify(docs));\r\n\r\n // formData.append('docs', '[{\"fileName\":\"mobileIndo.docx\",\"folder\":\"cert\"},{\"fileName\":\"hardeepSkill Matrix.docx\",\"folder\":\"cert\"},{\"fileName\":\"trainerPhoto.png\",\"folder\":\"cert\"}]')\r\n   \r\n //this.createFormData(formData,'docs', docs)\r\n\r\n// formData.append('docs', docs)\r\n  //formData[\"docs\"] = docs ;\r\n\r\n\r\n\r\n//   this.restSvc.zipPack(formData, fileName).then(\r\n\r\n//     (data) => {\r\n\r\n//       alert(\"WAIT\") ;\r\n\r\n\r\n//       this.restSvc.getZipFile(Global._id,\"cv\", data[\"docFile\"]).then(\r\n\r\n//         (data) => {\r\n  \r\n  \r\n            \r\n  \r\n  \r\n//      });\r\n\r\n\r\n           \r\n      \r\n          \r\n//      // FileSaver.saveAs(data, fileName);\r\n\r\n\r\n\r\n//  });\r\n\r\n }\r\n\r\n\r\n\r\n","import { Component, ViewEncapsulation, ElementRef, Input, OnInit, OnDestroy } from '@angular/core';\r\n\r\nimport { DialogService } from './dialog.service';\r\n\r\n@Component({ \r\n    selector: 'dialog', \r\n    templateUrl: 'dialog.component.html', \r\n    styleUrls: ['dialog.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class DialogComponent implements OnInit, OnDestroy {\r\n    @Input() id: string;\r\n    private element: any;\r\n\r\n    constructor(private dialogService: DialogService, private el: ElementRef) {\r\n        this.element = el.nativeElement;\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        // ensure id attribute exists\r\n        if (!this.id) {\r\n            console.error('dialog must have an id');\r\n            return;\r\n        }\r\n\r\n        // move element to bottom of page (just before </body>) so it can be displayed above everything else\r\n        document.body.appendChild(this.element);\r\n\r\n        // close modal on background click\r\n        this.element.addEventListener('click', el => {\r\n            if (el.target.className === 'dilaog') {\r\n                this.close();\r\n            }\r\n        });\r\n\r\n        // add self (this modal instance) to the modal service so it's accessible from controllers\r\n        this.dialogService.add(this);\r\n    }\r\n\r\n    // remove self from modal service when component is destroyed\r\n    ngOnDestroy(): void {\r\n        this.dialogService.remove(this.id);\r\n        this.element.remove();\r\n    }\r\n\r\n    // open modal\r\n    open(): void {\r\n        this.element.style.display = 'block';\r\n        document.body.classList.add('dialog');\r\n    }\r\n\r\n    // close modal\r\n    close(): void {\r\n        this.element.style.display = 'none';\r\n        document.body.classList.remove('dialog');\r\n    }\r\n}","<div class=\"dialog\" >\r\n    <div class=\"dialog-body\">\r\n        <ng-content></ng-content>\r\n    </div>\r\n</div>\r\n<div class=\"dialog-background\"></div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { DialogComponent } from './dialog.component';\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [DialogComponent],\r\n    exports: [DialogComponent]\r\n})\r\nexport class DialogModule { }","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class DialogService {\r\n    private dialogs: any[] = [];\r\n\r\n    add(dialog: any) {\r\n        // add modal to array of active modals\r\n        this.dialogs.push(dialog);\r\n    }\r\n\r\n    remove(id: string) {\r\n        // remove modal from array of active modals\r\n        this.dialogs = this.dialogs.filter(x => x.id !== id);\r\n    }\r\n\r\n    open(id: string) {\r\n        // open modal specified by id\r\n        const dialog = this.dialogs.find(x => x.id === id);\r\n        dialog.open();\r\n    }\r\n\r\n    close(id: string) {\r\n        // close modal specified by id\r\n        const dialog = this.dialogs.find(x => x.id === id);\r\n        dialog.close();\r\n    }\r\n}","export * from './dialog.module';\r\nexport * from './dialog.service';","import { analyzeAndValidateNgModules } from '@angular/compiler';\r\n//import { Trainer} from '../lib/trainer' ;\r\n\r\nexport  class Global {\r\n \r\n  public static clientName = \"\" ;\r\n  public static errList = [];\r\n  public static token = \"\" ;\r\n  public static pin = \"\";\r\n   \r\n  public static _id = \"\" ;\r\n  public static locData = {} ;\r\n  public static svrData = {} ;\r\n  public static dlgAuthMode = 0;\r\n  public static email = \"\" ;\r\n  public static adminLevel = 0;\r\n  public static adminLevelReq = 0;\r\n  public static domainName = '' ;\r\n  public static tableName = '' ;\r\n  public static  logo: any ;\r\n\r\n  public static trainersExist = false ;\r\n  \r\n  public static init(clientName) {\r\n\r\n    this.clientName = clientName ;\r\n    this.photo =  \"../../assets/imgs/myPhoto.png\" ;\r\n    this.locData = {} ;\r\n    this.svrData = {} ;\r\n    this.errList = [] ;  \r\n\r\n    // this.locData[\"_id\"] = \"\" ;\r\n    this.locData[\"name\"] = \"\" ;\r\n\r\n    this.locData[\"email\"] = \"\" ;\r\n    this.locData[\"dob\"] = \"\" ;\r\n    this.locData[\"mobileNbr\"] = \"\" ;\r\n    this.locData[\"address\"] = \"\" ;\r\n    this.locData[\"aboutMe\"] = \"\" ;\r\n    this.locData[\"edus\"] = [];\r\n    this.locData[\"exps\"] = [];\r\n    this.locData[\"certs\"] = [];\r\n    this.locData[\"skills\"] = [];\r\n    this.locData[\"acheives\"] = [];\r\n    this.locData[\"programs\"] = [];\r\n\r\n  if (this.clientName == 'optimusMinds') {\r\n    this.clientName = clientName ;\r\n    this.logo =    \"../../assets/imgs/optimusMindsLogo.png\" ;\r\n  \r\n    this.domainName = 'Optimus Minds Pte Ltd'\r\n    this.tableName = \"trainers\" ;\r\n\r\n\r\n    this.locData[\"moeExpiry\"] = \"\" ;\r\n    this.locData[\"moeFile\"] = \"\" ;\r\n    this.locData[\"idNbr\"] = \"\" ;\r\n    this.locData[\"declareChk\"] = false ;\r\n    this.locData[\"shareChk\"] = false ;\r\n    this.locData[\"programs\"] = [];\r\n\r\n\r\n    \r\n  }\r\n  else {\r\n   \r\n    this.logo =    \"../../assets/imgs/cvSalonLogo.png\" \r\n    this.domainName = 'CV Salon ver 1.0'\r\n    this.tableName = \"applicants\" ;\r\n  }\r\n\r\n\r\n      // this.locData[\"_id\"] = \"\" ;\r\n      this.svrData[\"name\"] = \"\" ;\r\n\r\n      this.svrData[\"email\"] = \"\" ;\r\n      this.svrData[\"dob\"] = \"\" ;\r\n      this.svrData[\"mobileNbr\"] = \"\" ;\r\n      this.svrData[\"address\"] = \"\" ;\r\n      this.svrData[\"aboutMe\"] = \"\" ;\r\n      this.svrData[\"edus\"] = [];\r\n      this.svrData[\"exps\"] = [];\r\n      this.svrData[\"skills\"] = [];\r\n      this.svrData[\"acheives\"] = [];\r\n  \r\n    if (this.clientName == 'optimusMinds') {\r\n      this.svrData[\"moeExpiry\"] = \"\" ;\r\n      this.svrData[\"idNbr\"] = \"\" ;\r\n      this.svrData[\"declareChk\"] = false ;\r\n      this.svrData[\"shareChk\"] = false ;\r\n  \r\n      this.svrData[\"programs\"] = [];\r\n    }\r\n  \r\n    // this.locData[\"achievementsAny\"]  = 0;\r\n\r\n   \r\n    \r\n    }\r\n\r\n    public static photo: any ;\r\n    public static photoFile: any;\r\n\r\n\r\n    // Optimus Minds\r\n    public static trainers = {} ;\r\n    public static docs = [] ;\r\n    public static achievementsAny = false ;\r\n    public static trainExpAiExpCnt = 0 ;\r\n    public static trainExpAtRiskCnt  = 0 ;\r\n    public static trainExpCarrerCnt  = 0 ;\r\n    public static trainExpDanceExpCnt =   0 ;\r\n    public static trainExpDramaExpCnt = 0 ;\r\n    public static trainExpItExpCnt = 0 ;\r\n    public static trainExpMusicExpCnt = 0 ;\r\n    public static trainExpTongueExpCnt = 0 ;\r\n    public static trainExpsSkillsExpCnt =0 ;\r\n    public static trainExpsOutdoorExpCnt = 0 ;\r\n    public static trainExpsVisualExpCnt = 0 ;\r\n    public static trainExpsSportsExpCnt = 0 ;\r\n    public static trainExpsOthersExpCnt = 0 ;\r\n \r\n    \r\n  public static aiChk: Boolean = false ;\r\n  public static atRiskChk: Boolean = false ;\r\n  public static careerChk: Boolean = false ;\r\n  public static dramaChk: Boolean = false ;\r\n  public static danceChk: Boolean = false ;\r\n  public static itChk : Boolean = false ;\r\n  public static skillsChk: Boolean = false ;\r\n  public static tongueChk: Boolean = false ;\r\n  public static musicChk: Boolean = false ;\r\n  public static outdoorChk: Boolean = false ;\r\n  public static sportsChk: Boolean = false ;\r\n  public static visualChk: Boolean = false ;\r\n  public static othersChk: Boolean = false ;\r\n\r\n  public static aiExpAny: Boolean = false ;\r\n  public static atRiskExpAny: Boolean = false ;\r\n  public static careerExpAny: Boolean = false ;\r\n  public static dramaExpAny: Boolean = false ;\r\n  public static danceExpAny: Boolean = false ;\r\n  public static itExpAny : Boolean = false ;\r\n  public static skillsExpAny: Boolean = false ;\r\n  public static tongueExpAny: Boolean = false ;\r\n  public static musicExpAny: Boolean = false ;\r\n  public static outdoorExpAny: Boolean = false ;\r\n  public static sportsExpAny: Boolean = false ;\r\n  public static visualExpAny: Boolean = false ;\r\n  public static othersExpAny: Boolean = false ;\r\n  \r\n  public static program: string  = \"+\";\r\n  public static cert: string  = \"+\";\r\n  public static from: string  = \"+\";\r\n  public static year: string  = \"+\";\r\n  public static file: string  = \"+\";\r\n \r\n    public static  trainCertPickId: number = 0 ;\r\n    public static trainCertId: number = 0 ;\r\n  \r\n    public static  dataMode: Boolean = false ;\r\n  \r\n    \r\n\r\n    \r\n  public static pad(num:number, size:number): string {\r\n    let s = num+\"\";\r\n    while (s.length < size) s = \"0\" + s;\r\n    return s;\r\n  }\r\n  \r\n  public static getMaxId(array) {\r\n    return Math.max.apply(Math, array.map(function(o) { return o.id; }))\r\n  \r\n  }\r\n\r\n  public static getMaxDocId(array) {\r\n    if (array.length === 0) return '00001' ;\r\n    let nbr = Math.max.apply(Math, array.map(function(o) { return o.docId; }))\r\n  \r\n    return this.pad(nbr + 1,5) ;\r\n   \r\n    \r\n    }\r\n\r\n  public static makeProgramList() {\r\n       \r\n    this.locData[\"programs\"] = [] ;\r\n   \r\n    if (this.aiChk)  this.locData[\"programs\"].push('AI') ;\r\n    if (this.atRiskChk )  this.locData[\"programs\"].push('At Risk') ;\r\n    if (this.careerChk )  this.locData[\"programs\"].push('Career Perparation') ;\r\n    if (this.danceChk )  this.locData[\"programs\"].push('Dance') ;\r\n    if (this.dramaChk )  this.locData[\"programs\"].push('Drama') ;\r\n    if (this.itChk )      this.locData[\"programs\"].push('IT\\\\Multimedia') ;\r\n    if (this.musicChk )  this.locData[\"programs\"].push('Music') ;\r\n    if (this.tongueChk )  this.locData[\"programs\"].push('Mother Tongue') ;\r\n    if (this.skillsChk )  this.locData[\"programs\"].push('Life Skills\\Soft Skills') ;\r\n    if (this.outdoorChk)    this.locData[\"programs\"].push('Outdoor Education') ;\r\n    if (this.visualChk)    this.locData[\"programs\"].push('Visual Arts') ;\r\n    if (this.sportsChk)    this.locData[\"programs\"].push('Sports') ;\r\n    if (this.othersChk)    this.locData[\"programs\"].push('Others') ;\r\n    \r\n    \r\n  \r\n\r\n\r\n  }\r\n  \r\n  \r\n  \r\n  public static trainer = () => { return {\r\n                                          trainerName: '',\r\n                                          trainerCode: '',\r\n                                       \r\n                                          idNbr: \"\",\r\n                                          email: \"\",\r\n                                          dob: \"\",\r\n                                          mobileNbr: \"\" ,\r\n                                          aboutMe: \"\" ,\r\n                                          declareChk: false,\r\n                                          shareChk: false,\r\n                                          edus: [],\r\n                                          exps: [],\r\n                                          programs: [],\r\n                                          trainCerts: [],\r\n                                          achievements: []\r\n                                          }\r\n                             } ;\r\n                \r\n                             \r\n\r\n public static calcAchievements() {\r\n      this.achievementsAny = this.locData[\"achievements\"].length === 0 ? false : true ;\r\n\r\n }\r\n\r\n public static trainExpAny = (program) => {\r\n            return Global.locData[\"trainExps\"].filter(function(element){\r\n              return element.program == program ;\r\n            }).length > 0 ? true : false ;\r\n            \r\n  \r\n          }                     \r\n                      \r\n     public static trainExpsExpAny = () => {   \r\n        Global.aiExpAny = Global.trainExpAny('AI') ;\r\n        Global.atRiskExpAny = Global.trainExpAny('At Risk') ;\r\n        Global.careerExpAny= Global.trainExpAny('Career Perparation') ;\r\n        Global.danceExpAny = Global.trainExpAny('Dance') ;\r\n        Global.dramaExpAny = Global.trainExpAny('Drama') ;\r\n        Global.itExpAny = Global.trainExpAny('IT\\\\Multimedia') ;\r\n        Global.musicExpAny = Global.trainExpAny('Music') ;\r\n        Global.tongueExpAny = Global.trainExpAny('Mother Tongue') ;\r\n        Global.skillsExpAny = Global.trainExpAny('Life Skills\\Soft Skills') ;\r\n        Global.outdoorExpAny = Global.trainExpAny('Outdoor Education') ;\r\n        Global.visualExpAny = Global.trainExpAny('Visual Arts') ;\r\n        Global.sportsExpAny = Global.trainExpAny('Sports') ;\r\n        Global.othersExpAny = Global.trainExpAny('Others') ;\r\n    \r\n    \r\n\r\n   }\r\n\r\n\r\n \r\n             \r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Global } from '../lib/global' ;\r\n@Injectable()\r\nexport class HeaderInjector implements HttpInterceptor {\r\n    constructor() { }\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        \r\n\r\n      /*   request = request.clone({\r\n            setHeaders: {\r\n              Authorization: `Bearer ${Global.authKey}`\r\n            }\r\n          }) */; \r\n\r\n          \r\n          request = request.clone({ headers: request.headers.set('Authorization', 'Bearer ' + `${Global.token}`) });\r\n          \r\n       //   request = request.clone({ headers: request.headers.set('Content-Type', 'application/json') });\r\n\r\n      //    request = request.clone({ headers: request.headers.set('Accept', 'application/json') });\r\n          \r\n      //    alert(JSON.stringify(request.headers)) ;\r\n\r\n         /*  request = request.clone({ headers: request.headers.set('Authorization', 'Bearer ' + `${Global.authKey}`) });\r\n\r\n          request = request.clone({ headers: request.headers.set('Content-Type', 'application/json') });\r\n          \r\n          request = request.clone({ headers: request.headers.set('Accept', 'application/json') });\r\n */\r\n        /* request = request.clone({\r\n            setHeaders: {\r\n                Authorization: 'Global.authKey',\r\n                Name: 'hardeep' \r\n            } \r\n         */\r\n        \r\n     //   });\r\n\r\n        \r\n\r\n        return next.handle(request);\r\n    }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\nimport { Global } from '../lib/global' ;\n@Pipe({\n  name: 'programfilter'\n})\nexport class ProgramfilterPipe implements PipeTransform {\n\n  // transform(value: unknown, ...args: unknown[]): unknown {\n  //   return null;\n  // }\n\n  transform(docs: any[], filter: any): any {\n    if (!docs || !filter) {\n        return docs;\n    }\n    // filter items array, items which match and return true will be\n    // kept, false will be filtered out\n   // return docs.filter(doc => doc.program.indexOf(filter) !== -1);\n    return docs.filter(doc => filter.indexOf(doc.program) > -1 || doc.program == 'moe');\n   // programs.indexOf(doc.program) > -1\n}\n\n}\n","import { Injectable, EventEmitter } from '@angular/core';\nimport { Subscription } from 'rxjs/internal/Subscription';\nimport { HttpClient, HttpEvent, HttpErrorResponse, HttpEventType, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n//import { Observable } from 'rxjs';\nimport { Global } from './global';\nimport { BehaviorSubject} from 'rxjs';\nimport { StringMapWithRename } from '@angular/compiler/src/compiler_facade_interface';\nimport * as FileSaver from 'file-saver';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestSvc {\n\n // SERVER_URL: string = \"http://localhost:3000/\"\n \n\n // SERVER_URL: string = \"http://52.187.7.201:3000/\"\n// SERVER_URL: string = \"http://13.67.110.254:3000/\"\n SERVER_URL: string = \"https://cvSalon.com:3000/\" \n\n  private btnAction = new BehaviorSubject('');\n  watchBtnAction = this.btnAction.asObservable();\n\n  // Emiiter to triggger functions in wysiswyg.ts\n/*   invokeChgPhoto = new EventEmitter();\n  subsVar: Subscription; */\n\n  action = \"\";\n  \n\n  constructor(private httpClient: HttpClient) {\n  }\n\n\n  onBtnAction(action) {\n    this.btnAction.next(action)\n\n  }\n\n  // Trigger emiiter \n/*   onChgPhoto() {\n    this.invokeChgPhoto.emit();\n  }\n */\n  // Called by main.ts on load of page to refresh photo\n  public getFile(_id: string, folder: string, file: string) {\n \n    let apiEp = `${this.SERVER_URL}${Global.tableName}/downLoadFile/${_id}/folder/${folder}/file/${file}` ;\n\n \n    alert(apiEp) ;\n    \n    const promise = new Promise((resolve, reject) => {\n      //const apiURL = apiEp + \"/\" + _id;\n\n      this.httpClient.get(apiEp, { responseType: 'blob' }).toPromise()\n        .then((res: any) => {\n          // Success\n                   \n          \n          let blob = new Blob(res.data);\n         \n          FileSaver.saveAs(blob, file);\n\n\n          resolve();\n\n        },\n          err => {\n\n            reject(err);\n          }\n        );\n    });\n\n    return promise;\n\n\n  }\n\n  // public getDoc(httpOptions, _id: string, folder: string, file: string) {\n \n  //   let apiEp = `${this.SERVER_URL}${Global.tableName}/downLoadFile/${_id}/folder/${folder}/file/${file}` ;\n\n\n  //   const res = await this.httpClient.get(apiEp , httpOptions).toPromise().catch((err: HttpErrorResponse) => {  \n  //     const error = err.error;  \n  //     return error;  \n  //   });  \n    \n  //   return res;  \n\n    \n \n    // alert(apiEp) ;\n    \n    // const promise = new Promise((resolve, reject) => {\n    //   //const apiURL = apiEp + \"/\" + _id;\n\n    //   this.httpClient.get(apiEp,{responseType: 'arraybuffer'}).toPromise()\n    //     .then((res: any) => {\n    //       // Success\n                   \n          \n    //       let blob = new Blob(res.data);\n         \n    //       FileSaver.saveAs(blob, file);\n\n\n    //       resolve();\n\n    //     },\n    //       err => {\n\n    //         reject(err);\n    //       }\n    //     );\n    // });\n\n    // return promise;\n\n\n // }\n\n\n  public getPhoto(_id: string) {\n\n   \n    let apiEp = this.SERVER_URL +  Global.tableName + \"/downLoadPhoto/\" + _id;\n\n\n\n    const promise = new Promise((resolve, reject) => {\n      //const apiURL = apiEp + \"/\" + _id;\n\n      this.httpClient.get(apiEp, { responseType: 'blob' }).toPromise()\n        .then((res: any) => {\n          // Success\n          this.makeImgFromBlob(res);\n          resolve();\n\n        },\n          err => {\n\n            reject(err);\n          }\n        );\n    });\n\n    return promise;\n\n\n  }\n\n  // Convert Blob to Image\n  makeImgFromBlob(image) {\n    let reader = new FileReader();\n    reader.addEventListener(\"load\", (data) => {\n\n      Global.photo = reader.result;\n\n      // Trigger function in wysiwyg\n      //this.onChgPhoto();\n\n    }, false);\n\n    if (image) {\n      reader.readAsDataURL(image);\n    }\n  }\n\n  // Upload Photo\n  /*   public upLoadPhoto(formData) {\n      let uri =  this.SERVER_URL + 'upLoadPhoto'\n  \n    \n      return this.httpClient.post<any>(uri, formData, {  \n          reportProgress: true,  \n          observe: 'events'  \n        });  \n    }\n   */\n  public upLoadDoc(formData, docType) {\n\n    let uri =  this.SERVER_URL + Global.tableName;\n\n   \n\n    if (docType === 'photo') {\n      uri += '/upLoadPhoto' ;\n    }\n    else {\n      uri += '/upLoadDoc' ;\n    }\n\n\n\n\n    return this.httpClient.post<any>(uri, formData, {\n      reportProgress: true,\n      observe: 'events'\n    });\n  }\n\n\n  public zipPack(formData, fileName: string) {\n\n\n    let apiEp = `${this.SERVER_URL}${Global.tableName}/zipper` ;\n\n    \n   \n     \n     const promise = new Promise((resolve, reject) => {\n       //const apiURL = apiEp + \"/\" + _id;\n \n       this.httpClient.post(apiEp, formData).toPromise()\n         .then((res: any) => {\n           // Success\n                    \n           \n          \n \n \n           resolve(res);\n \n         },\n           err => {\n \n             reject(err);\n           }\n         );\n     });\n \n     return promise;\n\n    // let uri =  this.SERVER_URL + Global.tableName;\n\n    // uri += '/zipper' ;\n\n    // return this.httpClient.post<any>(uri, formData, {\n    //   reportProgress: true,\n    //   observe: 'events'\n    // });\n  }\n\n  public create( objData: any) {\n\n    let apiEp = this.SERVER_URL + Global.tableName ;\n\n   \n\n    const promise = new Promise((resolve, reject) => {\n      \n      \n      const headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n      \n      this.httpClient.post(apiEp, objData, { headers: headers }).toPromise()\n        .then((res: any) => {\n\n\n\n\n          resolve(res);\n\n\n        },\n          err => {\n\n\n\n\n            reject(err);\n          }\n        );\n    });\n\n    return promise;\n  }\n\n\n   public qryTrainer(filter) {\n\n    //     var saveTrainerApi = \"http://localhost:3000/trainers/update/\" +  _id;\n    var qryTrainerApi = this.SERVER_URL + \"trainers/query\";\n\n\n    const promise = new Promise((resolve, reject) => {\n      const apiURL = qryTrainerApi;\n\n  \n\n      const headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n      this.httpClient.post(apiURL, filter, { headers: headers }).toPromise()\n        .then((res: any) => {\n\n        \n          \n\n          resolve(res);\n\n\n        },\n          err => {\n\n\n\n\n            reject(err);\n          }\n        );\n    });\n\n    return promise;\n  }\n \n  \n public update( objData: any, _id: string) {\n\n    //     var saveTrainerApi = \"http://localhost:3000/trainers/update/\" +  _id;\n\n    let apiEp = this.SERVER_URL + Global.tableName + \"/\" + _id;\n\n\n    const promise = new Promise((resolve, reject) => {\n    \n\n\n      const headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n\n      this.httpClient.put(apiEp, objData, { headers: headers }).toPromise()\n        .then((res: any) => {\n\n\n\n\n          resolve(res);\n\n\n        },\n          err => {\n\n\n\n\n            reject(err);\n          }\n        );\n    });\n\n    return promise;\n  }\n\n  public getByEmail(email: string) {\n\n\n    let apiEp = this.SERVER_URL + Global.tableName+ \"/getRec/\" + email;\n\n\n\n    const promise = new Promise((resolve, reject) => {\n      // const apiURL = getTrainerApi + \"/\" + _id;\n\n\n      this.httpClient.get(apiEp).toPromise()\n        .then((res: any) => {\n         \n\n\n          resolve(res);\n\n        },\n          err => {\n\n            alert('err') ; \n\n            reject(err);\n          }\n        );\n    });\n\n    return promise;\n  }\n\n  public getById(_id: string) {\n\n\n    let apiEp = this.SERVER_URL + Global.tableName + \"/\" +_id;\n\n  \n\n\n    const promise = new Promise((resolve, reject) => {\n    \n\n\n      this.httpClient.get(apiEp).toPromise()\n        .then((res: any) => {\n         \n\n\n          resolve(res);\n\n        },\n          err => {\n\n            alert('err') ; \n\n            reject(err);\n          }\n        );\n    });\n\n    return promise;\n  }\n\n\n /*  public sendToken(_id: string) {\n\n    const getTrainerApi = \"http://localhost:3000/trainers\"\n\n    const promise = new Promise((resolve, reject) => {\n      const apiURL = getTrainerApi + \"/\" + _id;\n\n\n      this.httpClient.get(apiURL).toPromise()\n        .then((res: any) => {\n          // Success\n\n\n\n          resolve(res);\n\n        },\n          err => {\n\n\n            reject(err);\n          }\n        );\n    });\n\n    return promise;\n  }\n */\n \n public emailToken(email: string) {\n\n \n\n    let apiEp = this.SERVER_URL + Global.tableName+ '/getToken/' + email ;\n\n  \n  \n\n    const promise = new Promise((resolve, reject) => {\n  \n      this.httpClient.get(apiEp).toPromise()\n        .then((res: any) => {\n          // Success\n\n           \n\n          resolve(res);\n\n        },\n          err => {\n\n          \n            reject(err);\n          }\n        );\n    });\n\n    return promise;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Global } from '../lib/global' ;\nimport {CtrlSvc} from '../lib/ctrlSvc' ;\n\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.scss']\n})\nexport class NavComponent implements OnInit {\n\n  constructor(private ctrlSvc: CtrlSvc) { }\n\n // docs: [{docType: string, docName: string}] ;\n ngOnInit(): void {\n\n}\n\npublic onSubmit()\n{\n  this.ctrlSvc.onSubmit() ;\n}\n\n public onQry()\n{\n  this.ctrlSvc.onQry() ;\n}\n\npublic onPdf()\n{\n  this.ctrlSvc.onPdf() ;\n}\n\npublic onZipPack()\n{\n  this.ctrlSvc.onZipPack() ;\n}\n\n\nget domainName() {\n  return Global.domainName ;\n}\n\nget logo() {\n   return Global.logo ;\n}\n \n\nget clientName() {\n  return Global.clientName;\n}\n\n\nget adminLevel() {\n\n   return Global.adminLevel ;\n\n}\n\n\n}","\n\n\n<div *ngIf=\"adminLevel==0\" class='container' fxLayout=\"row\" fxLayoutAlign=\"end start\">\n                <button class=\"button-3d\" (click)=\"onSubmit()\">Submit</button>\n                <button class=\"button-3d\" (click)=\"onPdf()\">PDF</button>\n                <!-- <button class=\"button-3d\" (click)=\"onQry()\">Query</button> -->\n               \n</div>\n\n       <div *ngIf=\"adminLevel !=0\" class='container' fxLayout=\"row\" fxLayoutAlign=\"start start\">\n                <button class=\"button-3d\" (click)=\"onQry()\">Query</button>\n                <button class=\"button-3d\" (click)=\"onPdf()\">PDF</button>\n                <button class=\"button-3d\" (click)=\"onZipPack()\">Zip</button>\n      </div>\n        <br>\n\n  \n        \n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Global } from '../lib/global' ;\nimport { DialogService } from '../lib/dialog';\nimport { RestSvc } from  '../lib/restSvc';\nimport {CtrlSvc} from '../lib/ctrlSvc' ;\n\nimport { HttpClient, HttpEvent, HttpErrorResponse, HttpEventType, HttpHeaders } from '@angular/common/http';\n\n@Component({\n  selector: 'app-optimus-minds-admin',\n  templateUrl: './optimus-minds-admin.component.html',\n  styleUrls: ['./optimus-minds-admin.component.scss']\n})\nexport class OptimusMindsAdminComponent implements OnInit {\n\n  trainerPickId = \"\";\n  trainExpPickIndex = 0 ;\n  docFile = \"\";\n  //docs = [] ;\n \n  //-----------\n /*  expScreenMode = false;\n\n  program = \"\" ;\n  trainName = \"\";\n  institute = \"\"\n  year =   \"\";\n  \n  trainExpPickId = \"\";\n  trainExpPickIndex = 0 ;\n  lastTrainExpId = \"\";\n  mode = \"\" ; */\n //-----------------\n  constructor(private restSvc: RestSvc,private ctrlSvc: CtrlSvc, private dlgSvc: DialogService, private httpClient: HttpClient) { }\n\n  ngOnInit(): void {\n\n    Global.init('optimusMinds'); \n  \n    let email = \"hardeepsysbit@gmail.com\" ;\n\n    this.restSvc.emailToken(email).then(\n      (msg) => {\n        let adminLevel = msg['adminLevel'];\n        Global.email = email;\n        Global.token = msg['token'];\n        Global.pin = msg['pin'];\n        Global._id = msg['_id'];\n        Global.adminLevel = 1;\n        Global.adminLevelReq = 1 ;\n        Global.dlgAuthMode = 2;\n       \n       \n\n        this.openModal('dlgAuth');\n\n\n  })\n  }\n\n  get programs() {\n    return Global.locData[\"programs\"]\n  }\n    \n  get docs() {\n    return Global.docs ;\n  }\n  \n  get trainersExist() {\n   return  Global.trainersExist ;\n  }\n\n  get trainers() {\n      return Global.trainers ;\n  }\n  \n  set trainers(value) {\n    Global.trainers = value ;\n  }\n\n\n\n   // for Optimus Minds\n\n   get aiChk() {\n     return Global.aiChk ;\n   }\n   set aiChk(value) {\n    Global.aiChk = value ;\n    Global.makeProgramList() ;\n  }\n\n  get  atRiskChk() {\n    return Global.atRiskChk ;\n  }\n  set  atRiskChk(value) {\n   Global.atRiskChk = value ;\n   Global.makeProgramList() ;\n }\n\n get careerChk() {\n  return Global.careerChk ;\n}\nset careerChk(value) {\n Global.careerChk = value ;\n Global.makeProgramList() ;\n}\n\nget dramaChk() {\n  return Global.dramaChk ;\n}\n\nset dramaChk(value) {\n Global.dramaChk = value ;\n Global.makeProgramList() ;\n}\n\nget  danceChk() {\n  return Global. danceChk ;\n  Global.makeProgramList() ;\n}\nset  danceChk(value) {\n Global.danceChk = value ;\n Global.makeProgramList() ;\n}\n\nget itChk () {\n  return Global.itChk ;\n}\n\nset itChk (value) {\n Global.itChk  = value ;\n Global.makeProgramList() ;\n\n}\n\nget skillsChk() {\n  return Global.skillsChk ;\n}\nset skillsChk(value) {\n Global.skillsChk = value ;\n Global.makeProgramList() ;\n}\n\nget tongueChk() {\n  return Global.tongueChk ;\n}\nset tongueChk(value) {\n Global.tongueChk = value ;\n Global.makeProgramList() ;\n}\n\n\n\nget  musicChk() {\n  return Global. musicChk ;\n}\nset  musicChk(value) {\n Global. musicChk = value ;\n Global.makeProgramList() ;\n}\n  \n \nget  outdoorChk () {\n  return Global. outdoorChk  ;\n}\nset  outdoorChk (value) {\n Global. outdoorChk  = value ;\n Global.makeProgramList() ;\n}\n  \n\nget sportsChk () {\n  return Global.sportsChk  ;\n}\nset sportsChk (value) {\n Global.sportsChk  = value ;\n Global.makeProgramList() ;\n}\n  \n\nget visualChk () {\n  return Global.visualChk  ;\n}\nset visualChk (value) {\n Global.visualChk  = value ;\n Global.makeProgramList() ;\n}\n  \n\n \n\n \n   onDocPick(docFolder: string, docFile: string) {\n      \n    this.docFile = docFile ;\n\n    docFolder = \"cert\" ;\n    docFile = \"Global.zip\" ;\n  \n    this.restSvc.getFile(Global._id,docFolder, docFile).then(\n\n      (data) => {\n\n\n        \n\n\n\n   });\n  }\n\n   onTrainerPick(trainerId: string) {\n      \n    this.trainerPickId =  trainerId ;\n\n    Global.docs = [] ;\n\n    this.restSvc.getById(trainerId).then(\n\n      (data) => {\n\n\n        let aryKeys = Object.keys(data);\n        let value = \"\";\n        for (let i = 0; i < aryKeys.length; i++) {\n          value = data[aryKeys[i]];\n          Global.svrData[aryKeys[i]] = value;\n          Global.locData[aryKeys[i]] = value;\n\n          \n\n        }\n\n       if (Global.svrData['moeFile'] != \"\") {\n       Global.docs.push({\"folder\": \"moe\", \"program\" :\"moe\" , \"title\": \"MOE : Expiry - \" + Global.svrData['moeExpiry'] ,\"file\":  Global.svrData['moeFile']})    ;\n   \n       }\n         \n          for (let j = 0; j < Global.svrData['certs'].length; j++) {\n           if (Global.svrData['certs'][j].file != '') {\n           //     this.docs.push({\"title\": Global.svrData['certs'][j].title,\"program\": Global.svrData['certs'][j].program,\"file\": Global.svrData['certs'][j].file})    ;\n                Global.docs.push({\"folder\": \"cert\",\"program\" : Global.svrData['certs'][j].program , \"title\": Global.svrData['certs'][j].program + \" : \" + Global.svrData['certs'][j].title,\"file\": Global.svrData['certs'][j].file})    ;\n   \n              }\n          }\n\n       \n\n       \n          for (let j = 0; j < Global.svrData['acheives'].length; j++) {\n           if (Global.svrData['acheives'][j].file != '') {\n                Global.docs.push({\"folder\": \"acheive\",\"program\" : Global.svrData['certs'][j].program ,\"title\": \"Acheivement : \" + Global.svrData['acheives'][j].title,\"file\": Global.svrData['acheives'][j].file})    ;\n            }\n          }\n\n       \n        \n\n\n      })\n\n\n    this.restSvc.getPhoto(trainerId);\n\n\n   }\n\n   public onQry() {\n     this.ctrlSvc.onQry() ;\n   }\n  \n   openModal(id: string) {\n      this.dlgSvc.open(id);\n  }\n\n}\n","\n<!-- <div fxLayout=\"row\">\n      \n      <div fxFlex=\"5\" fxHide fxShow.gt-xs></div> \n    \n      \n      <div fxFlex fxLayout=\"column\">\n    \n    \n    \n    \n    </div> \n     <div fxFlex=\"5\" fxHide fxShow.gt-xs></div> \n    </div> \n    \n     -->\n    \n    \n    <div fxLayout=\"row\">\n          \n      <div fxFlex=\"5\" fxHide fxShow.gt-xs></div> \n    \n    \n      <div fxFlex fxLayout=\"column\">\n    \n        <div  class=\"containerChk\">\n    \n          <input  class=\"leftA\" id=\"ai\" name=\"ai\" type=\"checkbox\"  [(ngModel)] = \"aiChk\" />\n          <label  class=\"rightA\" for=\"ai\">Artificial Intelligence</label>\n          \n          <input class=\"leftA\" id=\"atRisk\" name=\"atRisk\" type=\"checkbox\" [(ngModel)] = \"atRiskChk\" />\n          <label class=\"rightA\" for=\"atRisk\">At Risk</label>\n          \n          <input class=\"leftA\" id=\"career\" name=\"career\" type=\"checkbox\" [(ngModel)] = \"careerChk\" />\n          <label class=\"rightA\" for=\"career\">Career Perparation</label> \n          \n          <input class=\"leftA\" id=\"dance\" name=\"dance\" type=\"checkbox\" [(ngModel)] = \"danceChk\" />\n          <label class=\"rightA\" for=\"dance\">Dance</label> \n          \n          <input class=\"leftA\" id=\"drama\" name=\"drama\" type=\"checkbox\" [(ngModel)] = \"dramaChk\"  />\n          <label class=\"rightA\" for=\"drama\">Drama</label> \n          \n          <input class=\"leftA\" id=\"it\" name=\"it\" type=\"checkbox\" [(ngModel)] = \"itChk\" />\n          <label class=\"rightA\" for=\"it\">IT\\Multimedia</label>\n          \n          <input class=\"leftA\" id=\"skills\" name=\"skills\" type=\"checkbox\" [(ngModel)] = \"skillsChk\" />\n          <label class=\"rightA\" for=\"skills\">Life Skills\\Soft Skills</label>\n          \n          <input class=\"leftB\" id=\"tongue\" name=\"tongue\" type=\"checkbox\" [(ngModel)] = \"tongueChk\" />\n          <label class=\"rightB\" for=\"tongue\">Mother Tongue</label>\n          \n          <input class=\"leftB\" id=\"music\" name=\"music\" type=\"checkbox\" [(ngModel)] = \"musicChk\" />\n          <label class=\"rightB\" for=\"music\">Music</label>\n          \n          <input class=\"leftB\" id=\"outdoor\" name=\"outdoor\" type=\"checkbox\" [(ngModel)] = \"outdoorChk\" />\n          <label class=\"rightB\" for=\"outdoor\">Outdoor Education</label>\n          \n          \n          <input class=\"leftB\" id=\"sports\" name=\"sports\" type=\"checkbox\" [(ngModel)] = \"sportsChk\" />\n          <label class=\"rightB\" for=\"sports\">Sports</label>\n          \n          <input class=\"leftB\" id=\"visual\" name=\"visual\" type=\"checkbox\" [(ngModel)] = \"visualChk\" />\n          <label class=\"rightB\" for=\"visual\">Visual Arts</label>\n          \n          \n        \n        \n           </div>\n       \n          </div>\n       \n        </div>\n    \n        \n        <div fxLayout=\"row\"  *ngIf=\"trainersExist\">\n          \n          <div fxFlex=\"5\" fxHide fxShow.gt-xs></div>\n      \n \n  \n\n    <table fxFlex=\"1 1 auto\" > \n      <!-- <caption>Relevant Training Qualifications</caption> -->\n       <tbody style='font-size: 12px;'>\n    \n        <thead style='font-size: 12px;'>\n          <tr>\n            <th class=\"col1\">Name</th> \n            <th class=\"col2\">Email</th> \n            \n            <th class=\"col4\">Mobile Number</th>\n            <!-- <th class=\"col5\">Program</th> -->\n            \n           </tr> \n          </thead>\n       \n         \n  \n          <tr *ngFor=\"let trainer of trainers;\" (click)=\"onTrainerPick(trainer._id)\"\n                   [ngClass] = \"{'highlight' : trainer._id === trainerPickId}\">\n         \n    \n          <td class=\"col1\">{{trainer.name}}</td> \n          <td class=\"col2\">{{trainer.email}}</td> \n        \n          <!-- <td class=\"col3\">{{trainExp.trainName}}</td> -->\n          <td class=\"col4\">{{trainer.mobileNbr}}</td> \n        \n        </tr> \n       \n     \n     \n    </tbody>\n    \n      \n      </table>\n    \n    </div>\n\n\n    <div fxLayout=\"row\"  *ngIf=\"trainersExist\">\n          \n      <div fxFlex=\"5\" fxHide fxShow.gt-xs></div>\n\n      <p>Documents submitted</p>\n    \n    </div>\n\n\n    <div fxLayout=\"row\"  *ngIf=\"trainersExist\">\n\n      <div fxFlex=\"5\" fxHide fxShow.gt-xs></div>\n\n      <table fxFlex=\"1 1 auto\" > \n        <!-- <caption>Relevant Training Qualifications</caption> -->\n         <tbody style='font-size: 12px;'>\n      \n          <thead style='font-size: 12px;'>\n            <tr>\n              <th class=\"col1x\">Title</th> \n              <!-- <th class=\"col2\">Program</th>  -->\n              \n              <th class=\"col4x\">File</th>\n              <!-- <th class=\"col5\">Program</th> -->\n              \n             </tr> \n            </thead>\n         \n           \n      \n            <tr *ngFor=\"let doc of docs | programfilter: programs\" (click)=\"onDocPick(doc.folder,doc.file)\"\n                     [ngClass] = \"{'highlight' : doc.file === docFile}\" >\n           \n\n             <!-- <span *ngIf=\"programs.indexOf(doc.program) > -1 || doc.program == 'moe'\">  -->\n\n\n            <td class=\"col1x\">{{doc.title}}</td> \n            <!-- <td class=\"col2\">{{doc.program}}</td>  -->\n          \n            <!-- <td class=\"col3\">{{trainExp.trainName}}</td> -->\n            <td class=\"col4x\">{{doc.file}}</td> \n\n            <!-- </span>  -->\n          \n          </tr> \n         \n         \n       \n      </tbody>\n      \n        \n        </table>\n    \n      \n      </div>\n     \n    \n          \n    \n    \n    ","import { Component, OnInit } from '@angular/core';\r\nimport { Global } from '../lib/global' ;\r\n\r\n@Component({\r\n    selector: 'app-optimus-minds',\r\n    template:  `<div class=\"flex-container\">\r\n  <div fxLayout=\"row wrap\">\r\n    <div  fxFlex=\"100%\" fxFlex.gt-sm=\"50%\" >\r\n           <app-optimus-minds-admin></app-optimus-minds-admin> \r\n    </div>\r\n    <div  fxFlex=\"100%\" fxFlex.gt-sm=\"50%\">\r\n          <app-cv-salon-viewer></app-cv-salon-viewer> \r\n    </div> \r\n    </div> \r\n   \r\n  </div>`\r\n})\r\nexport class OptimusMinds implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}